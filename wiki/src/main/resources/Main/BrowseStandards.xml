<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Main</web>
<name>BrowseStandards</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.dward</creator>
<author>XWiki.dward</author>
<customClass></customClass>
<contentAuthor>XWiki.dward</contentAuthor>
<creationDate>1260562846000</creationDate>
<date>1286906666000</date>
<contentUpdateDate>1286906666000</contentUpdateDate>
<version>1.1</version>
<title>Browse Resources by Standard</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Import√© depuis un le XAR</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Main.BrowseStandards</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>2936da40-0fa9-42d9-bf64-b399e72f7c98</guid>
<property>
<tags/>
</property>
</object>
<content>#if("$!request.lang" != "")##{
#set($lang = $request.lang)
#else##}{
#set($lang = $xwiki.getLanguagePreference())
#end##}
#if("$!lang" == "")##{
#set($lang = "en")
#end##}
&lt;iframe src="" name="abStandardsFrame" id="abStandardsFrame" frameborder="0"&gt;&lt;/iframe&gt;
{pre}
&lt;script type="text/javascript"&gt;
var sVars = new Array();
var qString = unescape(window.location.search.substring(1));
var pairs = qString.split(/\&amp;/);
for (var i in pairs) {
	if ('function' !== typeof pairs[i]){
		var pair = pairs[i].split(/\=/);
		sVars[pair[0]] = pair[1];
	}
}
var baseURL = '/ab/${lang}/browse';
if (sVars['url']) {
	baseURL = sVars['url'];
	delete sVars['url'];
}
//sVars['ts'] = (new Date()).getMilliseconds();
var sString = '';
for (var i in sVars){
	if (sVars[i] &amp;&amp; 'function' !== typeof sVars[i]) {
		sString += '&amp;'+i+'='+sVars[i];
	}
}
if (sString) {
	sString = '?'+sString.substring(1);
}
var abStandardsFrame = document.getElementById('abStandardsFrame');
abStandardsFrame.src = document.location.protocol + "//" + document.location.host + baseURL + sString;
var abStandardsCurrHeight;
var abStandardsTimer;
function abStandardsHeight(doc) {
	function setHeight() {
		try {
			if (doc &amp;&amp; doc.body) {
				var pageHeight = Math.max(doc.body.scrollHeight, pageWrapDIV.offsetHeight);
				if ( (pageHeight != abStandardsCurrHeight) &amp;&amp; (pageHeight &gt; 0) ) {
					abStandardsCurrHeight = pageHeight;
					abStandardsFrame.style.height = jt_.valPx(pageHeight);
				}
			}
		}
		catch(err) {
		}
	}

	var pageWrapDIV = doc.getElementById('pageWrap');
	setHeight();
	clearInterval(abStandardsTimer);
	abStandardsTimer = setInterval(setHeight, 75);
}
&lt;/script&gt;
{/pre}</content></xwikidoc>
