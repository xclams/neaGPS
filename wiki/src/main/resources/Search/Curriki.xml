<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Search</web>
<name>Curriki</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.dward</creator>
<author>XWiki.LudovicDubost</author>
<customClass>org.curriki.xwiki.plugin.asset.Asset</customClass>
<contentAuthor>XWiki.LudovicDubost</contentAuthor>
<creationDate>1218150392000</creationDate>
<date>1369944299000</date>
<contentUpdateDate>1369944299000</contentUpdateDate>
<version>9.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Search.Curriki</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>25c487e8-6b82-4627-8cbe-3782d27f8eb9</guid>
<property>
<tags/>
</property>
</object>
<content>## vim: ts=4:sw=4
{pre}
## start=0&amp;limit=25&amp;sort=title&amp;dir=ASC
## terms=&amp;subject=&amp;filetype=&amp;level=&amp;language=&amp;ict=&amp;special=
## return  root: results, totalProperty: totalCount
##   pagename, title, ict, contributor, contributorName, review
#set($lucene = $xwiki.getPlugin("lucene"))
#if(!$lucene) ##{
{'resultCount':'0', 'rows':[]}
#else ## }{
    #if("$!request.lang" != "")##{
        #set($lang = $request.lang)
    #else##}{
        #set($lang = $xwiki.getLanguagePreference())
    #end##}
    #if("$!lang" == "")##{
        #set($lang = "en")
    #end##}
##
## Set start and limit for result list
##
    #set($Integer = 0)
    #set($maxResults = $Integer.parseInt($msg.get('search.results.max')))
    #set($start = 0)
    #if("$!request.start" != "") ##{
        #set($start = $Integer.parseInt($request.start))
    #end ##}
    #set($start = 1 + $start)
    #set($start = "$start")
    #set($limit = "25")
    #if("$!request.limit" != "") ##{
        #set($limit = $request.limit)
    #end ##}
##
## Set sort field
##
    #set($sortField1 = 'title.untokenized')
    #set($sortField2 = 'date')
    #if($!request.sort != "") ##{
        #if($request.sort == "name") ##{
            #set($sortField1 = 'title.untokenized')
            #set($sortField2 = 'date')
        #end ##}
        #if($request.sort == "updated") ##{
            #set($sortField1 = 'date')
            #set($sortField2 = 'title.untokenized')
        #end ##}
    #end ##}
    #if($!request.dir == "DESC") ##{
        #set($sortField1 = "-${sortField1}")
    #end ##}
    #set($sortFields = "${sortField1},${sortField2}")
    #set($sortFields = $sortFields.split(","))
##
## Create query
##
    #set($q = $xwiki.arrayList)
##
## Terms
    #if($!request.terms != "") ##{
        #set($junk = $q.add("${request.terms}"))
    #end ##}
##
## Put together query conditions
    #set($conditions = "")
    #foreach($condition in $q) ##{
        #set($conditions = "$conditions AND $condition")
    #end ##}
##
## General query information
    #set($wikinames = "xwiki")
    #set($languages = "default,en")
## CURRIKI-2572
##  Only fetch things in the default or en language for now, as the $languages
##  parameter does not seem to be working
##  NOTE That this SHOULD try to look for items in the user's language
    #set($include = "web:(Main OR News OR Demo) AND lang:(default OR en)")
    #set($exclude = "AND NOT name:WebPreferences AND NOT web:Blog_Demo AND NOT web:Coll_Demo AND NOT type:attachment AND NOT type:objects")
    #set($luceneQuery = "$include $conditions $exclude")
##
## Do query
##
    #set($searchResults = $lucene.getSearchResults($luceneQuery, $sortFields, $languages))
    #set($results = $searchResults.getResults($start, $limit))
    #set($resultCount = $searchResults.totalHitcount)
    #set($modifiedCount = $resultCount)
    #if($modifiedCount &gt; $maxResults) ##{
        #set($modifiedCount = $maxResults)
    #end ##}

##
## List out results
##
    #if("$!resultCount" == "") ##{
        #set($resultCount = 0)
    #end ##}
{
'rows':[
    #set($first = true)
    #foreach($result in $results) ##{
    ##
    ## Get each result
        #set($d = $xwiki.getDocument("${result.web}.${result.name}"))
    ##
    ## Get Title
        #asset_findtitle($d)
        #set($title = $currikiTitle)
        #if(!$title || $title.length() == 0) ## {
            #set($title = $msg.get("caption.untitled"))
        #end ## }
        #set($title = $title.replace("'", "&amp;#39;"))
    ##
    ## Get URL
        #set($url = $xwiki.getURL($d.fullName))
    ##
    ## Get Content
        #set($text = "")
        #set($text = $!d.getRenderedContent())
        #set($text = $text.replace("'", "&amp;#39;"))
        #set($text = $text.replaceAll("[\n|\r]+", "&lt;br /&gt;"))
    ##
    ##
        #if($first) ##{
            #set($first = false)
        #else ##} {
        ,
        #end ##}
    {
    'page':'${d.fullName}'
    ,'name':'${title}'
    ##		,'text':'${text}'
    ,'updated':'${xwiki.formatDate($d.date,"yyyy/MM/dd HH:mm")}'
    ,'url':'${url}'
    }
    #end ##}
]
,'resultCount':'${modifiedCount}'
,'totalResults':'${resultCount}'
}
#end ## }
{/pre}</content></xwikidoc>
