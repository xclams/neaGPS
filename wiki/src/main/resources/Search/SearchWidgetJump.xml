<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>Search</web>
<name>SearchWidgetJump</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.adminPolx</creator>
<author>XWiki.LudovicDubost</author>
<customClass></customClass>
<contentAuthor>XWiki.LudovicDubost</contentAuthor>
<creationDate>1289421165000</creationDate>
<date>1369944300000</date>
<contentUpdateDate>1369944300000</contentUpdateDate>
<version>9.1</version>
<title>Search Widget Jump Page</title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/1.0</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.TagClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<tags>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>1</multiSelect>
<name>tags</name>
<number>1</number>
<prettyName>Tags</prettyName>
<relationalStorage>1</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>30</size>
<unmodifiable>0</unmodifiable>
<values></values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</tags>
</class>
<name>Search.SearchWidgetJump</name>
<number>0</number>
<className>XWiki.TagClass</className>
<guid>ed7f9251-c3ff-47d0-bc62-7b6435013e65</guid>
<property>
<tags/>
</property>
</object>
<content>&lt;%
private String encodeValue(Object v) {
    def enc;
    if(v instanceof Number){
        enc = "n:" + v;
    }else if(v instanceof Boolean){
        enc = "b:" + (v ? "1" : "0");
    }else if(v instanceof Date){
        enc = "d:" + ((Date)v).toGMTString();
    }else if(v instanceof List){
        def flat = "";
        for(i in  0..(v.size())){
            flat += encodeValue(v[i]);
            if(i != len-1) flat += "^";
        }
        enc = "a:" + flat;
    }else if(v  instanceof Map){
        def flat = "";
        for(key in v.keySet()){
            if(v.get(key) != null){
                flat += key + "=" + this.encodeValue(v.get(key)).replaceAll("\\+","%20") + "^";
            }
        }
        enc = "o:" + flat.substring(0, flat.length()-1);
    }else{
        enc = "s:" + v;
    }
    return URLEncoder.encode(enc);

}

private String nonNullParam(String paramName) {
    if(paramName==null) return "";
    Object o = request.getParameter(paramName);
    if(o==null) return "";
    return o;
}

if(request.subject==null &amp;&amp; request.mediatype==null &amp;&amp; request.level==null &amp;&amp; request.ict==null &amp;&amp; request.text==null &amp;&amp;  request.txt_escaped==null) {
    println("This page will redirect you provided you input parameters (subject, mediatype, level, ict).");
} else {
    def subject = nonNullParam("subject"),
        subjectparent = nonNullParam("subjectparent"),
        mediatype = nonNullParam("mediatype"),
        level = nonNullParam("level"),
        ict = nonNullParam("ict"),
        text = nonNullParam("text"),
        review = nonNullParam("review"),
        ictprfx = nonNullParam("ictprfx"),
        special = nonNullParam("special"),
        language = nonNullParam("language");

    // compatibility to AdWords "free resources" campaign
    if(subjectparent == "" &amp;&amp; null != request.subjectparent_escaped)
        subjectparent = URLDecoder.decode(request.subjectparent_escaped);
    if(subject == "" &amp;&amp; null != request.subject_escaped)
        subject = URLDecoder.decode(request.subject_escaped);
    if(subjectparent=="" &amp;&amp; subject!="") {
        subjectparent = subject;
        subject = "";
    }
    if(ictprfx=="" &amp;&amp; ict!="") {
        ictprfx = ict.substring(0,ict.indexOf("_"));
    }
    if(text == "" &amp;&amp; null != request.txt_escaped)
        text = URLDecoder.decode(request.txt_escaped);


    def query = ["s":"resource",
            "f":["resource":
                    [subjectparent : subjectparent,
                            subject : subject,
                            category : mediatype,
                            level : level,
                            terms: text,
                            language : language,
                            review : review,
                            ictprfx : ictprfx,
                            ict : ict,
                            special : special
                            // CURRIKI-5404:
                            ,sort:[field:"score", dir:"DESC"]
                    ]],
            "p":[curriki: [c: 0, s: 25], group: [c: 0, s: 25],
                    member: [c: 0, s: 25], resource: [c: 0, s: 25]],
            "t":"search-resources-tab",
            "a":["a":true]
            // group, member, curriki...
    ];

    def url = "";//"http://" + xwiki.xWiki.Param('curriki.system.hostname', 'www.curriki.org');
    url = url + "/xwiki/bin/view/Search/#" + encodeValue(query);


    //println("{pre}")
    //println(query);
    //println("{pre}")
    //println("Please go &lt;a href='" + url + "'&gt;here&lt;/a&gt;.")
    response.sendRedirect(url); // permanent? temnporary?
}
// %&gt;</content></xwikidoc>
