<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>CreateResources</web>
<name>StyledMacros20</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.superadmin</creator>
<author>XWiki.FlaviusOlaru</author>
<customClass></customClass>
<contentAuthor>XWiki.FlaviusOlaru</contentAuthor>
<creationDate>1368103426000</creationDate>
<date>1368628177000</date>
<contentUpdateDate>1368628177000</contentUpdateDate>
<version>5.1</version>
<title></title>
<template></template>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment>Imported from XAR</comment>
<minorEdit>false</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>CreateResources.StyledMacros20</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>3e98c0fe-3cab-4cd9-bddc-9cf5b6b43f05</guid>
<property>
<cache>default</cache>
</property>
<property>
<code>// ----------------------------------- override YUI checknode method -------------------
/**
 * jsj add
 *Invoked when the user press space key
 */
YAHOO.widget.CheckNode.prototype.getKeyCheck = function() {
    return " if( 32 == (window.event ? event.keyCode : event.which) ){ "+"YAHOO.widget.TreeView.getNode(\'" + this.tree.id + "\'," +
        this.index + ").checkClick();"+"if (event.preventDefault) event.preventDefault( ); else event.returnValue = false;}";
};

// Overrides YAHOO.widget.TextNode
YAHOO.widget.CheckNode.prototype.getNodeHtml = function() {
    // this.logger.log("Generating html");
    var sb = new Array();

    sb[sb.length] = '&lt;table border="0" cellpadding="0" cellspacing="0"&gt;';
    sb[sb.length] = '&lt;tr&gt;';

    for (i=0;i&lt;this.depth;++i) {
        sb[sb.length] = '&lt;td class="' + this.getDepthStyle(i) + '"&gt;&amp;#160;&lt;/td&gt;';
    }

    sb[sb.length] = '&lt;td';
    sb[sb.length] = ' id="' + this.getToggleElId() + '"';
    sb[sb.length] = ' class="' + this.getStyle() + '"';
    if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="this.className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
    }
    sb[sb.length] = ' onclick="javascript:' + this.getToggleLink() + '"&gt;&amp;#160;';
    sb[sb.length] = '&lt;/td&gt;';

    // check box
    sb[sb.length] = '&lt;td';
    sb[sb.length] = ' id="' + this.getCheckElId() + '"';
    sb[sb.length] = ' class="' + this.getCheckStyle() + '"';
    sb[sb.length] = ' onclick="javascript:' + this.getCheckLink() + '"&gt;';
    sb[sb.length] = '&amp;#160;&lt;/td&gt;';


    sb[sb.length] = '&lt;td&gt;';
    sb[sb.length] = '&lt;a';
    sb[sb.length] = ' id="' + this.labelElId + '"';
    sb[sb.length] = ' class="' + this.labelStyle + '"';
    sb[sb.length] = ' href="' + this.href + '"';
    sb[sb.length] = ' target="' + this.target + '"';
    if (this.hasChildren(true)) {
        sb[sb.length] = ' onmouseover="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getHoverStyle()"';
        sb[sb.length] = ' onmouseout="document.getElementById(\'';
        sb[sb.length] = this.getToggleElId() + '\').className=';
        sb[sb.length] = 'YAHOO.widget.TreeView.getNode(\'';
        sb[sb.length] = this.tree.id + '\',' + this.index +  ').getStyle()"';
    }
    sb[sb.length] = ' onkeypress="javascript:' + this.getKeyCheck(this.event)+'"&gt;';
    //sb[sb.length] = '&gt;';
    sb[sb.length] = this.label;
    sb[sb.length] = '&lt;/a&gt;';
    sb[sb.length] = '&lt;/td&gt;';
    sb[sb.length] = '&lt;/tr&gt;';
    sb[sb.length] = '&lt;/table&gt;';

    return sb.join("");
};

function checkSimpleResourceForm() {
  var missed_fields_str = '';
  if (isFieldEmpty('CurrikiCode.AssetClass_0_title')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.title'));
  }
  if (isFieldEmpty('CurrikiCode.AssetClass_0_description')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.description'));
  }
  if(isFieldEmpty('CurrikiCode.AssetClass_0_fw_items')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.subject'));
  }
  if(isFieldEmpty('CurrikiCode.AssetClass_0_educational_level', true)) { 
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.level'));
  }
  if ($('CurrikiCode.AssetClass_0_instructional_component').value.length &lt;= 1) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.ict'));
  }
  if (isWysiwygFieldEmpty('slp_text')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.content'));
  }
  if (isFieldEmpty('CurrikiCode.AssetLicenseClass_0_rightsHolder')) {
    missed_fields_str = appendSeparatedErrorMessageStr(missed_fields_str, _('form.scratch.required.fields.dialog.rights'));
  }

  var error_msg = "";
  if(missed_fields_str != '') {
    error_msg = _("form.scratch.required.fields.dialog") + missed_fields_str;
  } else {
    if(getFieldContent('CurrikiCode.AssetClass_0_title').length &gt; 250) {
      error_msg = _('form.scratch.title.more.250');
    }
  }

  if (error_msg != '') { // since theres error messages, validation failed... bail out.
    alert(error_msg);
    setSuccessMessage('');     //not POSTing due to 'false' return below, so this should not matter -- reset in case of going "back" in browser after successful POST??
    return false;
  } else { // SUCCESS!
    setSuccessMessage(_('form.done.created.resource'));
    return true;
  }
}
//
function getFieldContent(field_id) {
  var field   = $(field_id);
  var content = (content == null) ? '' : field.value;
  if ((content.length &lt; 1) || (content.trim() == '')) {
    return "";
  }
  return content;
}
//
function isFieldEmpty(field_id, by_name) {
  if (by_name || by_name == true) {
    var inputs = $$("[name="+field_id+"]");
    var field = inputs[0];
    if (field.readAttribute('type') == 'checkbox' || field.readAttribute('type') == 'radio') {
      for (var i=0, max = inputs.length; i&lt;max; i++) {
        if (inputs[i].checked == true)
          return false;
      }
      return true;
    } else {
      var content = (field == null) ? "" : field.value;
      if ((content.length &lt; 1) || (content.trim() == '')) {
        return true;
      }
      return false;
    }
  } else {
    var field = $(field_id);
    var content = (field == null) ? "" : field.value;
    if ((content.length &lt; 1) || (content.trim() == '')) {
      return true;
    }
    return false;
  }
}
//
function isWysiwygFieldEmpty(field_id) {
  var wysiwyg = Wysiwyg.getInstance(field_id);
  var wysiwyg_body = wysiwyg.getRichTextArea().contentWindow.document.body;
  // here the value is actually 1 for IE9, to be fixed
  var minNodes = browser.isIE ? 0 : 1;
  if (wysiwyg_body.childNodes.length == 1 &amp;&amp; wysiwyg_body.textContent == "" &amp;&amp; wysiwyg_body.childNodes[0].nodeName != 'IMG')
    return true;
  return (wysiwyg_body.childNodes.length &lt; minNodes); 
}
// set value POSTed via form hidden field w/ id="successMessage" and
// default value="" (which if received on POST, indicates an unexpected
// error condition has occurred). A nonempty string-value indicates
// validation success, the contents are displayed in AssetDone as $successMessage.
function setSuccessMessage(str) {
  var input_field_successMessage_o = $('successMessage');
  if (input_field_successMessage_o != null) {
    input_field_successMessage_o.value = str;
  }
  else { alert('error in setSuccessMessage()'); }
}
//
function appendSeparatedErrorMessageStr(message_str, missed_field_err_str) {
  return(message_str + '\n\t\t' + missed_field_err_str);
}
function onSubmitSimpleResourceForm() {
  try { 
    if(document.forms.inline.onsubmit) document.forms.inline.onsubmit(); 
    if (checkSimpleResourceForm()) {
      document.forms.inline.action=_('form.done.url'); 
      document.forms.inline.submit();
    }
    return false;
  } catch(e) { 
    alert(_('form.scratch.submit.button') + 'button onclick error: ' + e + ' ...'); 
    return false;
  }
}
function onCancelSimpleResourceForm(cancel_url) {
  try { 
    window.location.href=cancel_url;
    return false;
  } catch(e) { 
    alert(_('form.scratch.cancel.button') + 'button onclick error: ' + e + ' ...'); 
    return false; 
  }
}</code>
</property>
<property>
<name></name>
</property>
<property>
<parse>0</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<content>{{velocity output=false}}
## http://next.dev.curriki.org/xwiki/bin/edit/CreateResources/StyledMacros20
## 
##
##
#macro(curriki20_formtitle $title_str)
==$title_str==
#end
##
## boxing effect taken from http://www.curriki.org/xwiki/bin/edit/Admin/R2SkinMacros?language=en
##
#macro(curriki20_formpart_begin $header_str)
{{html clean=false}}
&lt;fieldset class="frame"&gt;
&lt;div class="headerbar"&gt;$header_str&lt;/div&gt;
&lt;div class="frame-content"&gt;
{{/html}}
#end
##
## nb: must "bracket" #curriki_formpart_begin() exactly
##
#macro(curriki20_formpart_end)
{{html clean=false}}
&lt;/div&gt;  ##class=frame-content
&lt;/fieldset&gt; ##class="frame"
{{/html}}
#end
##
##
## 
#macro(curriki20_forminstructions $instructions_str)
===$instructions_str===
#end
## 
## tooltip code taken from macros.vm #tooltip(). Note must call $xwiki.addTooltipJS() in footer of main form
##
#macro(curriki20_formprompt $title_str $tooltip_str $fieldtext $field_required_p $addl_css_class_str)
{{html clean=false}}
&lt;div class="entry $addl_css_class_str"&gt;
  &lt;h5 class="instruction"&gt;#if($field_required_p)&lt;em&gt;$msg.get("form.required.fields.indicator")&lt;/em&gt;&amp;nbsp;#end$title_str&amp;nbsp;#if($tooltip_str!="")&lt;img class="tooltip" alt="" src="/xwiki/skins/curriki8/icons/exclamation.png" ext:qtip="$tooltip_str"/&gt;#end&lt;/h5&gt;
  #if($fieldtext!="")&lt;p class="instruction"&gt;$fieldtext&lt;/p&gt;#end
&lt;/div&gt; ##class="entry $addl_css_class_str
{{/html}}
#end
##
## step 3 is the same in each... let's just use a macro
##
#macro(curriki20_createresources_step3)
#curriki20_formpart_begin($msg.get("form.scratch.step3.header"))
#curriki20_forminstructions($msg.get("form.scratch.step3.instruction"))
#curriki20_formprompt($msg.get("sri.hidden_from_search_title"), $msg.get("sri.hidden_from_search_tooltip"), $msg.get("sri.hidden_from_search_txt"), false, "medium")
$newAsset.display("hidden_from_search","edit")
{{html clean=false}}
&lt;label&gt;$msg.get("sri.hidden_from_search_after")&lt;/label&gt; ##special case where text is needed after display(), which appears as label-less toggle
{{/html}}
#curriki20_formprompt($msg.get("sri.right_holder_title"), $msg.get("sri.right_holder_tooltip"), $msg.get("sri.right_holder_txt"), true, "medium")
$newAsset.display("rightsHolder","edit")
#curriki20_formprompt($msg.get("sri.rights_title"), $msg.get("sri.rights_tooltip"), $msg.get("sri.rights_txt"), false, "medium")
$newAsset.display("rights","edit")
#curriki20_formprompt($msg.get("sri.license_type_title"), $msg.get("sri.license_type_tooltip"), $msg.get("sri.license_type_txt"), false, "medium")
{{html clean=false}}
&lt;p&gt;&lt;label&gt;$msg.get("sri.license_type_heading")&lt;/label&gt;&lt;/p&gt; ##special case where additional text is needed as prompt before display()
{{/html}}
$newAsset.display("licenseType","edit")
#set($gCCL=$!asset.getObject("CurrikiCode.AssetLicenseClass").getProperty("grantCurrikiCommercialLicense"))
#if(""=="$!gCCL" || $!gCCL!="" &amp;&amp; $gCCL.value!="0")
{{html clean=false}}
  &lt;p&gt;&amp;nbsp;&lt;/p&gt;
  &lt;p&gt;&lt;label style="font-weight:normal;"&gt;
  #if($gCCL.value==0) ## impossible?
    &lt;input type="checkbox" value="1" name="CurrikiCode.AssetLicenseClass_0_grantCurrikiCommercialLicense"&gt;
    &lt;input type="hidden" value="0" name="CurrikiCode.AssetLicenseClass_0_grantCurrikiCommercialLicense"&gt;
  #else
    &lt;input type="checkbox" value="1" checked="checked" name="CurrikiCode.AssetLicenseClass_0_grantCurrikiCommercialLicense"&gt;
    &lt;input type="hidden" value="0" name="CurrikiCode.AssetLicenseClass_0_grantCurrikiCommercialLicense"&gt;
  #end
  ## $newAsset.display("grantCurrikiCommercialLicense","edit")
  $msg.get("sri.license_type_license_to_curriki")
  &lt;/label&gt;&lt;/p&gt;
{{/html}}
#end
#curriki20_formpart_end()
#end
{{/velocity}}</content></xwikidoc>
