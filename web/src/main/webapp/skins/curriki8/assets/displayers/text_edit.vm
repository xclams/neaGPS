#asset_displaycontentheader("")
<div class="asset-display-edit">
  <div class="asset-display-edit-inner">
  <form name="text" action="$xwiki.getURL("CurrikiCode.AssetSaveService", "view")" onsubmit="return beforeAssetSubmit(this);" method="post" >
  #set($xredirect = $xwiki.getFormEncoded($asset.getURL('view', $!request.queryString.replaceAll("viewer=assetedit", ""))))
  <input  type="hidden" name="page" value="$asset.fullName" />
  <input  type="hidden" name="xredirect" value="$xredirect" />
  <fieldset>
  <ul>
  #set($ok = $asset.use("CurrikiCode.TextAssetClass"))
  #set($syntax = $asset.getValue("syntax"))
  #if($syntax=="xwiki/2.0" || $syntax=="xwiki/2.1")
    #set($useWikiMode = $asset.isAdvancedContent() && !$request.forcewysiwyg)
    <li class="input-textarea">
    #if($useWikiMode)
      # are not setting up the wysiwyg but instead stay in wiki mode adding a message and a button to switch
      <p>$msg.get("rve.content.edit.text.instruction_text.wiki_text")</p>
    #else
      <p class="input-textarea-indication">$msg.get("rve.content.edit.text.instruction_text.wiki_wysiwyg")</p>
    #end
      <div id="input-wiki-wysiwyg">$asset.getTextArea()</div>
    </li>
    #if(!$useWikiMode)
      #wysiwyg_editProperty($asset "content" true)
    #end
  #elseif($syntax=="xhtml/1.0")
    <li class="input-textarea">
      <p class="input-textarea-indication">$msg.get("rve.content.edit.text.instruction_text.html_wysiwyg")</p>
      <div id="input-html-wysiwyg">
        $asset.getTextArea()
        ## hidden textarea to update wysiwyg editor with html content after fail on HTMLConverter
        <textarea id='html_text' name='html_text' class='hidden'>$asset.content</textarea>
      </div>
    </li>
    #set($parameters = $util.hashMap)
    #wysiwyg_storeConfig($parameters $asset "content" true)
    #set ($discard = $parameters.put('syntax', 'xhtml/1.0'))
    #set ($discard = $parameters.put('convertInput', false))
    #wysiwyg_editPropertyCustom($asset $parameters)
  #else
    <li class="input-textarea">
      <div id="input-text-wysiwyg">$asset.getTextArea()</div>
    </li>
  #end
  #asset_edit_revision()
  </ul>
  </fieldset>
  <hr>
  #asset_edit_buttons($asset true)
  </form>
  ## this allows to check for changes
  #curriki_clickawayjs("text" $xwiki.curriki.escapeForJS($msg.get("rve.content.edit.warning.message_text")))
  </div>
</div>
#asset_displaycontentfooter()
