#**
 * Groups Messages Macros
 *
 *#


#**
 * Displays the list of messages
 *
 *#
#macro(groups_messages)
    #groupinit()
    #groupsheader("messages")
    #if(!$isGroupMember && ($s.policy=="closed") && !$hasGlobalAdmin)
        $msg.get("groups_messages_onlyaccessibletomembers")
    #else
        #groupsdisplaywelcome($msg.get("groups_messages_about_title") $spaceName $doc.name $isGroupAdmin)
        #if($isGroupMember)
            #begingroupsection($msg.get("groups_messages_createmessage_title"),"","","blue",false)
        <a href="$xwiki.getURL("${doc.space}.CreateMessage")">
            <img src="$xwiki.getSkinFile("groups-add-message.png")" class="image-left" /></a>
        <div class="add-message-content">
            $msg.get("groups_messages_createmessage_infotxt")
        </div>
            #endgroupsection()
        #end
        #begingroupsection($msg.get("groups_messages_allmessages_title",[$s.displayTitle]),"","","blue",false)
        #if(!$request.filter)
            #set($filter = "0")
        #else
            #set($filter = $request.filter)
        #end
    <div class="frame-content messages-content">
        <form>
            <p>$msg.get("groups_messages_filter_title")</p>
            <p class="messages-radio">
                <input type="radio" id="toEntireGroup" name="filter" value="0" class="messages-radio-left" onclick="this.form.submit()" #if($filter=="0") checked="checked" #end/><label for="toEntireGroup">$msg.get("groups_messages_filter_toentiregroup")</label>
                <input type="radio" id="toMe" name="filter" value="1" onclick="this.form.submit()" #if($filter=="1") checked="checked" #end/><label for="toMe">$msg.get("groups_messages_filter_tome")</label>
                <input type="radio" id="toMyRole" name="filter" value="2" onclick="this.form.submit()" #if($filter=="2") checked="checked" #end/><select name="role" onchange="this.form.submit()" #if($filter!="2")disabled="disabled"#end>
                <option value="" #if("$!request.role"=="")selected="selected"#end>$msg.get("groups_messages_filter_tomyrole")</option>
                #set($myRoles = $sm.getRoles($spaceName, $context.user))
                #foreach($role in $myRoles)
                    <option value="$role" #if($role==$request.role)selected="selected"#end>$xwiki.getDocument($role).title</option>
                #end
                #if($isGroupAdmin)
                    #set($roleDoc = $xwiki.getDocument($sm.getAdminGroupName($spaceName)))
                    <option value="${roleDoc.fullName}" #if($roleDoc.fullName==$request.role)selected="selected"#end>$msg.get("groups.roles.admin.title")</option>
                #end
            </select>
                #if($isGroupAdmin)
                    <input type="radio" id="toAll" name="filter" value="3" onclick="this.form.submit()" #if($filter=="3") checked="checked" #end/><label for="toAll">$msg.get("groups_messages_filter_toall")</label>
                #end
            </p>
        </form>
        #if($filter=="0")
        ## To Entire Group
            #set($membersGroup = $spaceName + ".MemberGroup")
            #set($noViewRightsSpecified = "not exists (from BaseObject as r, StringProperty as l where doc.fullName=r.name and r.className='XWiki.XWikiRights' and r.id=l.id.id and l.id.name='levels' and instr(l.value,'view')>0)")
            #set($existsGroupViewRights = "exists (from BaseObject as rights, StringProperty as levels, LargeStringProperty as groups where doc.fullName=rights.name and rights.className='XWiki.XWikiRights' and rights.id=levels.id.id and levels.id.name='levels' and rights.id=groups.id.id and groups.id.name='groups' and instr(levels.value,'view')>0 and instr(groups.value,'${membersGroup}')>0)")
            #set($sql = ", BaseObject as obj where doc.web='Messages_$doc.space' and doc.fullName=obj.name and obj.className='XWiki.ArticleClass'  and ((${noViewRightsSpecified}) or (${existsGroupViewRights})) order by doc.date desc")
        #elseif($filter=="1")
        ## To Me
            #set($existsUserViewRights = "exists (from BaseObject as rights, StringProperty as levels, LargeStringProperty as users where doc.fullName=rights.name and rights.className='XWiki.XWikiRights' and rights.id=levels.id.id and levels.id.name='levels' and rights.id=users.id.id and users.id.name='users' and instr(levels.value,'view')>0 and instr(users.value,'${context.user}')>0)")
            #set($sql = ", BaseObject as obj where doc.space='Messages_$doc.space' and doc.fullName=obj.name and obj.className='XWiki.ArticleClass' and ${existsUserViewRights} order by doc.date desc")
        #elseif($filter=="2")
        ## To My Roles
            #if("$!request.role"!="")
                #set($myRoles = [$request.role])
            #elseif($isGroupAdmin)
                #set($ok = $myRoles.add($sm.getAdminGroupName($spaceName)))
            #end
            #if($myRoles.size()>0)
                #set($existsRoleViewRights = "exists (from BaseObject as rights, StringProperty as levels, LargeStringProperty as groups where doc.fullName=rights.name and rights.className='XWiki.XWikiRights' and rights.id=levels.id.id and levels.id.name='levels' and rights.id=groups.id.id and groups.id.name='groups' and instr(levels.value,'view')>0 and (")
                #foreach($role in $myRoles)
                    #set($existsRoleViewRights = $existsRoleViewRights + "instr(groups.value,'${role}')>0 or ")
                #end
                #set($existsRoleViewRights = $existsRoleViewRights + "1=0))")
                #set($sql = ", BaseObject as obj where doc.web='Messages_$doc.space' and doc.fullName=obj.name and obj.className='XWiki.ArticleClass'  and ${existsRoleViewRights} order by doc.date desc")
            #end
        #elseif($filter=="3" && $isGroupAdmin)
        ## To All
            #set($sql = ", BaseObject as obj where doc.fullName=obj.name and obj.className='XWiki.ArticleClass' and doc.web='Messages_$doc.space' order by doc.date desc")
        #end

        #set($itemsPerPage = 10)
        #if( $request.ipp )
            #set($itemsPerPage = $xwiki.parseInt($request.ipp))
        #end
        #set($startIndex = 0)
        #if($request.startIndex)
            #set($startIndex = $xwiki.parseInt($request.startIndex))
        #end

        #if($sql)
            #set($totalCount = $xwiki.searchDocuments($sql).size())
            #foreach($messagePageName in $xwiki.searchDocuments($sql,$itemsPerPage,$startIndex))
                #if($xwiki.checkAccess($messagePageName, "view")) ## {
                    #messagelistmessage($messagePageName)
                #end ## }
            #end
        #else
            #set($totalCount = 0)
        #end
        #set($args = "filter=${filter}")
        #if($request.role)
            #set($args = "${args}&role=${request.role}")
        #end
        #curriki_paginatorargs($msg.get("groups_messages_page"),$startIndex,$itemsPerPage,$totalCount,$args)
    </div>
        #endgroupsection()
    #end
    #groupsfooter()
#end


#macro(messagelistjs)
#verbatim_start
<script type="text/javascript">
        #if(!$togglemsgsectionvisibility)
            #set($togglemsgsectionvisibility = 1)
        function toggleMsgSectionVisibility(seccounter, showhide){
            var seccontent = document.getElementById("msgsection" + seccounter + "content");
            if(eltHasClass(seccontent, "hidden")){
                rmClass(seccontent, "hidden");
                seccontent.style.display = "";
                // change text
                showhide.removeChild(showhide.firstChild);
                showhide.appendChild(document.createTextNode("$msg.get('caption.hide')"));
                // erase cookie
                eraseCookie("Section" + seccounter + "Hidden");
            }
            else{
                addClass(seccontent, "hidden");
                seccontent.style.display = "none";
                // Change text
                showhide.removeChild(showhide.firstChild);
                showhide.appendChild(document.createTextNode("$msg.get('caption.show')"));
                // set cookie
                createCookie("Section" + seccounter + "Hidden", true, "");
            }
            return false;
        }
        #end
    var linksDiv = document.getElementById("msgsection${seccounter}links");
    var showhide${seccounter} = document.createElement("a");
    addClass(showhide${seccounter}, "button-link-table");
    linksDiv.appendChild(showhide${seccounter});
    showhide${seccounter}.setAttribute("href", "#msgsection${seccounter}content");
        #if($show)
        showhide${seccounter}.appendChild(document.createTextNode("$msg.get('caption.hide')"));
        #else
        showhide${seccounter}.appendChild(document.createTextNode("$msg.get('caption.show')"));
        #end
    showhide${seccounter}.setAttribute("onclick", "toggleMsgSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
    showhide${seccounter}.onclick = new Function("toggleMsgSectionVisibility(${seccounter}, showhide${seccounter}); return false;");
</script>
#verbatim_end
#end

#macro(messagelistmessage $messagePageName)
    #if(!$seccounter)
        #set($seccounter = 1)
    #else
        #set($seccounter = $seccounter + 1)
    #end
    #set($messageDoc = $xwiki.getDocument($messagePageName))
    #set($ok = $messageDoc.use("XWiki.ArticleClass"))
<div class="frame-inset">
    #set($modificationDate = $xwiki.formatDate($messageDoc.date,$msg.get("mycurriki.datetimeFormat")))
<p><span class="date">$modificationDate</span>, $msg.groups_messages_createdby <a>$xwiki.getLocalUserName($messageDoc.creator)</a></p>
<p id="msgsection${seccounter}links" class="button-links">
    <a class="button-link" href="$messageDoc.getURL()">$msg.get("groups_messages_message_optionsview_link")</a>
    #if($messageDoc.hasAccessLevel("edit"))
        <a class="button-link-table" href="$messageDoc.getURL("view","edit=1")">$msg.get("groups_messages_message_optionsedit_link")</a>
    #end
## show/hide will be added automatically
</p>
<p class="messages-title"><a href="$messageDoc.getURL("view")">$messageDoc.display("title")</a></p>
    #set($show = 1)
    #messagelistjs()
    #if($show)
    <div id="msgsection${seccounter}content" class="messages-content">
    #else
    <div id="msgsection${seccounter}content" class="messages-content hidden">
    #end
## Hack CURRIKI-3338 Fix paragraph carriage return issues in wiki rendered content
    $messageDoc.display("content").replaceAll("<br/><p/>","<br/>&nbsp;<p/>")
    <div class="clearfloats"></div>
    <p class="date">
        <a href="$messageDoc.getURL("view")#attachments">$msg.get("groups_messages_message_attachments", [$messageDoc.attachmentList.size()])</a>
        <a href="$messageDoc.getURL("view")#comments">$msg.get("groups_messages_message_comments", [$messageDoc.getComments().size()])</a>
    </p>
</div>
</div>
#end

#macro(groupsdisplayarticleblock $adoc)
    #if($adoc.hasAccessLevel("view"))
        #set($obj = $adoc.getObject("XWiki.ArticleClass",0))
        #set($msgtitle = $adoc.display("title", "view"))
    ## Hack CURRIKI-3338 Fix paragraph carriage return issues in wiki rendered content
        #set($msgcontent = $adoc.display("content", "view").replaceAll("<br/><p/>","<br/>&nbsp;<p/>"))
    ## CURRIKI-1860: we display the modification date and the last author
        #set($modificationDate = $xwiki.formatDate($adoc.date,$msg.get("mycurriki.datetimeFormat")))
    <p><span class="date">$modificationDate</span>, by <a>$xwiki.getLocalUserName($adoc.creator)</a></p>
    <p class="frame-title">$msgtitle</p>
    <p>
        $msgcontent
    </p>
    #end
#end

##
## PAGE: Groups.CreateMessageSheet
## Macro to update from request the rights of the given message document
##
#macro(messageUpdateRightsFromRequest $msgdoc)
## Remove any previous rights
    #set($ok = true)
    #if($msgdoc.getObject("XWiki.XWikiRights"))
        #set($ok = $msgdoc.removeObjects("XWiki.XWikiRights"))
    #end
    #if($ok)
    ## Add edit right to creator
        $msgdoc.use($msgdoc.newObject("XWiki.XWikiRights"))
        $msgdoc.set("users", $context.user)
        $msgdoc.set("levels", "edit")
        $msgdoc.set("groups",  "")
        $msgdoc.set("allow","1")
    ## Add view rights
        #set($users = $context.user)
        #if($request.toMember)
            #set($users = $users + "," + $request.selectedMembersList)
        #end
        #set($groups = "")
        #if($request.toGroup)
            #set($groups = $groups + "," + $spaceName + ".MemberGroup")
            #if($s.policy == "open")
                #set($groups = $groups + ",XWiki.XWikiAllGroup")
            #end
        #end
        #if($request.toRole)
            #set($groups = $groups + "," + $request.selectedRolesList)
        #end
        $msgdoc.use($msgdoc.newObject("XWiki.XWikiRights"))
        $msgdoc.set("users", $users)
        $msgdoc.set("groups",  $groups)
        $msgdoc.set("levels", "view")
        $msgdoc.set("allow","1")
        $msgdoc.save()
    #end ## if previous rights have been removed successfuly
#end
##
## PAGE: Groups.CreateMessageSheet
## Macro to send a notification mail to the "To" list of the message that has just been created
##
#macro(messageSendNotificationMail $msg_doc)
    #if($request.notify && $xwiki.mailsender)
        #set($mailTo = "")
        #if($request.toGroup)
        ## add all group members
            #foreach($member in $sm.getMembers($spaceName))
                #set($profile = $sm.getSpaceUserProfile($spaceName, $member))
                #if($profile && $profile.allowNotifications)
                    #set($mailTo = $mailTo + $xwiki.getUser($member).email + ",")
                #end
            #end
        #else
            #set($mailToList = $xwiki.arrayList)
            #if($request.toMember && $request.selectedMembersList.trim().length() > 0)
            ## add selected members
                #foreach($member in $request.selectedMembersList.split(","))
                    #set($profile = $sm.getSpaceUserProfile($spaceName, $member))
                    #if($profile && $profile.allowNotifications)
                        #set($memberEmail = $xwiki.getUser($member).email)
                        #if(!$mailToList.contains($memberEmail))
                            #set($ok = $mailToList.add($memberEmail))
                            #set($mailTo = $mailTo + $memberEmail + ",")
                        #end
                    #end
                #end
            #end
            #if($request.toRole && $request.selectedRolesList.trim().length() > 0)
            ## add members having selected roles
                #foreach($role in $request.selectedRolesList.split(","))
                    #foreach($member in $sm.getUsersForRole($spaceName, $role))
                        #set($profile = $sm.getSpaceUserProfile($spaceName, $member))
                        #if($profile && $profile.allowNotifications)
                            #set($memberEmail = $xwiki.getUser($member).email)
                            #if(!$mailToList.contains($memberEmail))
                                #set($ok = $mailToList.add($memberEmail))
                                #set($mailTo = $mailTo + $memberEmail + ",")
                            #end
                        #end
                    #end
                #end
            #end
        #end
        #if("$!mailTo" != "")
            #set($mailFrom = $xwiki.getXWikiPreference("admin_email"))
            #set($mailDoc = $xwiki.getDocument("Groups.MailTemplateCreateMessage"))
        ## $msgdoc has to be in the current context because it is used in the mail template
            #set($msgdoc = $msg_doc)
            $msgdoc.use("XWiki.ArticleClass")
            #set($mailSubject = $doc.getRenderedContent($mailDoc.title,"xwiki/1.0"))
            #set($mailContent = $doc.getRenderedContent($mailDoc.content,"xwiki/1.0"))
            #set($ok = $xwiki.mailsender.sendTextMessage($mailFrom, null, null, $mailTo, $mailSubject, $mailContent, null))
        #end
    #end
#end##
## PAGE: Groups.CreateMessageSheet
## Macro to include the JavaScript code needed for message creation
##
#macro(messageIncludeCreateJs)
<script type="text/javascript" src="$xwiki.getSkinFile('groups/groupsmessages.js', true)"></script>
#end
##
## PAGE: Groups.CreateMessageSheet
## Macro to add the input fields needed for selecting the "To" list
##
#macro(messageAddSendToFormFields $spaceName $toGroup $selectedRoles $selectedMembers)
<div class="groups-create-messages">
    <div class="strong">$msg.get('groups_messages_create_to_label')</div>
    <table>
        <tbody>
        <tr>
            <td colspan="3">
                <input id="toGroup" name="toGroup" type="checkbox" #if($toGroup)checked="checked"#end style="width:auto;" /><label for="toGroup">$msg.get('groups_messages_create_to_group_label')</label>
            </td>
        </tr>
        <tr class="selectedRoles">
            <td>
                <input id="toRole" name="toRole" type="checkbox" #if($selectedRoles.size()>0)checked="checked"#end style="width:auto;" onclick="enableSelect(this, 'rolesList')" /><label for="toRole">$msg.get('groups_messages_create_to_role_label')</label>
            </td>
            <td>
                <input id="selectedRolesList" name="selectedRolesList" type="hidden" value="" />
                <select id="rolesList" onchange="displayAddLink(this, 'addRoleLink')" disabled="true">
                    <option value="">$msg.get('groups_messages_create_to_role_default')</option>
                    #groupGetRoles($spaceName true)
                    #foreach($role in $ret_groupRoles)
                        #groupGetRoleMemberCount($role)
                        <option#if($ret_roleCount==0) DISABLED#end value="${role.fullName}">$role.title</option>
                    #end
                </select>
            </td>
            <td>
                <a id="addRoleLink" href="javascript:void()" title="${msg.get('groups_messages_create_to_role_add_tooltip')}" onclick="addToList(this, 'rolesList', 'selectedRoles'); return false;" style="display:none;">$msg.get('groups_messages_create_to_role_add_label')</a>
            </td>
        </tr>
        <tr class="selectedMembers">
            <td>
                <input id="toMember" name="toMember" type="checkbox" #if($selectedMembers.size()>0)checked="checked"#end style="width:auto;" onclick="enableSelect(this, 'membersList')" /><label for="toMember">$msg.get('groups_messages_create_to_member_label')</label>
            </td>
            <td>
                <input id="selectedMembersList" name="selectedMembersList" type="hidden" value="" />
                <select id="membersList" onchange="displayAddLink(this, 'addMemberLink');" disabled="true">
                    <option value="" selected="selected">$msg.get('groups_messages_create_to_member_default')</option>
                    #foreach($memberName in $sm.getMembers($spaceName))
                        <option value="${memberName}">$xwiki.getUserName($memberName, false)</option>
                    #end
                </select>
            </td>
            <td>
                <a id="addMemberLink" href="javascript:void()" title="${msg.get('groups_messages_create_to_member_add_tooltip')}" onclick="addToList(this, 'membersList','selectedMembers'); return false;" style="display:none;">$msg.get('groups_messages_create_to_member_add_label')</a>
            </td>
        </tr>
        </tbody>
    </table>
    <div class="strong">$msg.get('groups_messages_create_notify_label')</div>
    <div>
        <input id="notify" name="notify" type="checkbox" style="width:auto;" /><label for="notify">$msg.get('groups_messages_create_notify_mail_label')</label>
    </div>
</div>
    #if($selectedRoles.size()>0 || $selectedMembers.size()>0)
    #verbatim_start
    <script type="text/javascript">
            #if($selectedRoles.size()>0)
            enableSelect(document.getElementById('toRole'), 'rolesList');
            var selectedRoles = [#foreach($role in $selectedRoles)'${role}',#end];
            preFillList('addRoleLink', 'rolesList', 'selectedRoles', selectedRoles);
            #end
            #if($selectedMembers.size()>0)
            enableSelect(document.getElementById('toMember'), 'membersList');
            var selectedMembers = [#foreach($member in $selectedMembers)'${member}',#end];
            preFillList('addMemberLink', 'membersList','selectedMembers', selectedMembers);
            #end
    </script>
    #verbatim_end
    #end
#end
##

#macro(groups_message)
  ## add full screen js
  #activatefullscreen()
  #groupsinit()
  #groupsheader("messages")
  #set($obj = $doc.getObject("XWiki.ArticleClass",0))
  #set($msgtitle = $doc.display("title", "view"))
  ##set($msgcontent = $doc.display("content", "view"))
  #set($divid = "groups-message-edit")
  #if($request.xredirect)
    #set($redirect = $request.xredirect)
  #else
    #set( $redirect = $xwiki.getRequestURL().replaceAll("&", "&amp;"))
  #end
  #if($doc.hasAccessLevel("edit"))
    #wysiwyg_import(true)
    <script src="$xwiki.getSkinFile("Pork.Iframe.js")" type="text/javascript"></script> 
    #groupsajaxjs()
    ## Includes the JavaScript code needed for the "Send To" input fields
    #messageIncludeCreateJs()
    ## this is the autoincrement value used to create unique ids
    #if(!$counter)
      #set($counter = 1)
    #else
      #set($counter = $counter + 1)
    #end
    #set($editText = $msg.groups_messages_view_message_edit_link)
    #set($deleteText = $msg.groups_messages_view_message_delete_link)
    <div class="frame" id="section_${counter}">
    <div class="titleheader titleheader-blue"><h3 class="titleheader-left">$msgtitle</h3>
      <div class="titleheader-right">
      <span id="editLinkContainer" style="padding:0px;">
      <a href="javascript:editMessage('$doc.space','$doc.name','$divid')" title="$editText">$editText</a>
      #sep()
      </span>
      #set ($xredirect = $xwiki.getURL("${spaceName}.Messages"))
      <a href="javascript:deleteMessage('$doc.space','$doc.name', '$escapetool.url($xredirect)')" title="$deleteText">$deleteText</a>
      </div>
    </div>
    <div class="frame-content" id="section${counter}content">
  #else
    #begingroupsection($msgtitle,"Edit","javascript:editMessage('$doc.space','$doc.name','$divid')","blue",false)
  #end
  <div id="$divid">
    #groupsdisplayarticleblock($doc)
  </div>
  #if($request.edit=="1")
    #verbatim_start
    <script type="text/javascript">
      editMessage('$doc.space','$doc.name','$divid');
    </script>
    #verbatim_end
  #end
  #endgroupsection()
  <a name="comments"></a>#begingroupsection($msg.get("groups_messages_view_comments_title"),"","","blue",false)
  #set($count = 0)
  #set($isFirst = true)
  #foreach($comment in $doc.comments)
    #if(!$isFirst)
    <hr class="my-curriki-hr"/>
    #end
    #set($odd = $count%2)
    #if($odd==0)
      #set($odd = "")
    #else
      #set($odd = " odd-row")
    #end
    <div id="comment${count}" class="blog-comment${odd}">
      <div class="blog-comment-avatar">
      #curriki_avatar($xwiki.getDocument($comment.author))
      </div>
      <div class="blog-comment-line">
      <p><span class="date">
    #set($commentDate = $xwiki.formatDate($doc.getValue("date", $comment), $msg.get('mycurriki.dateFormat')))
    $xwiki.getUserName($comment.author) | <span class="blog-comment-date">$commentDate</span>
    #if(($comment.author == $context.user) || $isGroupAdmin || $xwiki.hasAdminRights())
      #set($qs = "docname=${doc.fullName}&date=${doc.getValue('date', $comment).time}")
      <a class="right" href="$xwiki.getURL("Groups.MessageDeleteCommentService", "view", $qs)" class="curriki-link" title="${msg.get('mycurriki.blog.comment.delete')}" onclick="return updateHref(this, confirm('${msg.get("mycurriki.blog.comment.delete.confirm")}'));">$msg.get('mycurriki.blog.comment.delete')</a> ## Link to delete -- use XWikiComments.author and date to get unique specification
    #end
      </span></p>
      </div>
      #verbatim($doc.getValue("comment", $comment).replaceAll("\n","<br />"))
    </div>
    #set($count = 1 - $count)
    #set($isFirst = false)
  #end ## foreach on comments
  #if($xwiki.hasAccessLevel("comment"))
  <div id="commentscontent" class="xwikiintracontent">
    <div class="button-right"><a class="button-orange" onclick="CurrikiApp.formToggle(document.commentAddForm); return false;" href="#" title="$msg.get("groups_messages_view_addcomment_btt")">$msg.get("groups_messages_view_addcomment_btt")</a></div>
    #set($cclass = $xwiki.getDocument("XWiki.XWikiComments").getxWikiClass())
    #set($comment = $cclass.newObject())
    <form name="commentAddForm" id="commentAddForm" action="$doc.getURL("commentadd")" method="post">
    <hr class="my-curriki-hr"/>
    <fieldset id="commentform">
      <input type="hidden" name="xredirect" value="${doc.getURL("view")}" />
      <input type="hidden" name="XWiki.XWikiComments_author" value="$context.user"/>
      <input type="hidden" name="XWiki.XWikiComments_date" value=""/>
      <div><textarea id='XWiki.XWikiComments_comment' rows='5' name='XWiki.XWikiComments_comment'></textarea></div>
      <div>
        <button class="button-orange" type="submit" onclick="return updateXRedirect('commentAddForm', true);">$msg.get("caption.saveComment")</button>
        <button class="button-grey" type="reset" onclick="CurrikiApp.formHide(this.form);">$msg.get("cancel")</button>
      </div>
    </fieldset>
    </form>
  </div>
  #end ## hasAccessLevel comments
  #endgroupsection()
  <a name="attachments"></a>#begingroupsection($msg.get("groups_messages_view_attachments_title"),"","","blue",false)
  #if($doc.attachmentList.size()>0)
    #foreach ($attach in $doc.attachmentList)
    <div class="attachments">
      <div class="attachments_icon">#mimeicon($attach.filename)</div>
      <p><span class="date">
      #set ($attachURL = $doc.getAttachmentURL("${attach.filename}", 'download'))
      <a href="$attachURL" title="$msg.get('downloadthisattachment')">#packName($attach.filename)</a>
      </span> $attach.version
      <span class="right">
      #set ($attachURL = $doc.getAttachmentURL("${attach.filename}", 'download', 'force-download=1'))
      <a href="$attachURL" title="$msg.get('downloadthisattachment')">$msg.get('download')</a>
      #if($hasedit || $hasadmin)
      #set ($attachURL = $doc.getAttachmentURL("${attach.filename}", 'delattachment', "xredirect=${escapetool.url($redirect)}"))
      | <a href="$attachURL" onclick="return confirm('$msg.get("confirmdelattachment")');" title="$msg.get('deletethisattachment')">$msg.get('delete')</a>
      #end
      </span>
      <p><span class="date">$msg.groups_messages_view_attachments_providedby $xwiki.getLocalUserName($attach.author) $msg.groups_messages_view_attachments_on $xwiki.formatDate($doc.creationDate,$msg.get("mycurriki.datetimeFormat"))</span></p>
    </div>
    #end
  #end
  #if($hasedit || $hasadmin)
  <div id="attachmentscontent" class="xwikiintracontent">
    <div class="button-right"><a class="button-orange" onclick="CurrikiApp.formToggle(document.attachmentAddForm, 'filepath')">$msg.get("addattachment")</a></div>
    <form name="attachmentAddForm" id="attachmentAddForm" action="$doc.getURL("upload")" enctype="multipart/form-data" method="post">
      <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
      #verbatim_start
      <input type="hidden" name="xredirect" value="$escapetool.xml($xwiki.getRequestURL())" />
      #verbatim_end
      <fieldset id="attachform">
        <div><input id="xwikiuploadname" type="hidden" name="filename" value="" size="40"/></div>
        <div><label id="xwikiuploadfilelabel" for="xwikiuploadfile">$msg.get("choosefiletoupload"):</label></div>
        <div><input id="xwikiuploadfile" type="file" name="filepath" value="" size="40"/></div>
        <div>
          <button class="button-orange" type="submit" onclick="return updateXRedirect('attachmentAddForm', updateAttachName(this.form, '$msg.get("doyouwanttoreplace")'))">$msg.get("attachthisfile")</button>
          <button class="button-grey" type="reset" onclick="CurrikiApp.formHide(this.form);">$msg.get("cancel")</button>
        </div>
      </fieldset>
    </form>
  </div>
  #end
  #endgroupsection()
  #verbatim_start
  <script type="text/javascript">
    function isEditMode(){
        var child = document.getElementById('${divid}').firstChild;
        while(child){
            if (child.tagName && child.tagName.toLowerCase()=='form'){
                return true;
            }
            child = child.nextSibling;
        }
        return false;
    }
    function updateXRedirect(formName, returnValue){
        var xredirect = document.forms[formName].xredirect;
        if (isEditMode()){
            xredirect.value = '${doc.getURL("view", "edit=1")}';
        }else{
            xredirect.value = '${doc.getURL("view")}';
        }
        return returnValue;
    }
    function updateHref(anchor, returnValue){
        if (isEditMode()){
            anchor.href += '&edit=1';
        }
        anchor.href += '&confirm=1';
        return returnValue;
    }
  </script>
  #verbatim_end
  #groupsfooter()
#end

#**
 * Displays the create message form
 *
 *#
#macro(groups_message_create)
    #groupsinit()
    #groupsheader("messages")
    #if(!$isGroupMember)
        $msg.get("groups_documentation_onlyaccessibletomembers")
    #else
        #groupsdisplaywelcome($msg.get("groups_messages_create_about_title") $spaceName $doc.name $isGroupAdmin)
        #if($request.page)
        ## saving article
            #set($space = "Messages_${spaceName}")
            #set($mytitle = $request.get("XWiki.ArticleClass_0_title"))
            #set($pagename= $xwiki.getUniquePageName($space, $xwiki.clearName($mytitle)))
            #set($pagefullname = "$space.${pagename}")
            #set($tdoc = $xwiki.getDocument($request.page))
            #set($ok = $xwiki.renamePage($tdoc, $pagefullname))
            #set($newdoc = $xwiki.getDocument($pagefullname))
            #set($ok = $newdoc.addObjectFromRequest("XWiki.ArticleClass"))
            $newdoc.setContent($xwiki.getDocument("Groups.MessageTemplate").getContent())
            $newdoc.setParent("${spaceName}.Messages")
        ## Update rights
            #messageUpdateRightsFromRequest($newdoc)
        ## Send notification mail
            #messageSendNotificationMail($newdoc)
        ## Redirect to message
            $response.sendRedirect($newdoc.getURL())
        #else
            #begingroupsection($msg.get("groups_messages_create_title"), "", "", "blue",false)
        <div class="groups-edit-message">
            $msg.get("groups_messages_create_about_infotxt")
            #set($bentrydoc = $xwiki.getDocument("Temp", $xwiki.getUniquePageName("Temp","Article")))
            #set($ok = $bentrydoc.save())
            #set($bentryobj = $bentrydoc.newObject("XWiki.ArticleClass"))
            #set($junk = $bentrydoc.use($bentryobj))
            #set($cancelAction = $xwiki.getURL("${doc.space}.Messages", "view"))
            #set($saveAction = "")
            <form name="inline" action="$saveAction" method="post">
                <input type="hidden" name="page" value="$bentrydoc.fullName" />
                <div class="fields">
                    <strong>$msg.get("groups_messages_create_messagetitle_instruction")</strong><br />
                    <span class="tmargin full-width">
                    $bentrydoc.display("title", "edit", $bentryobj)
                    </span><br />
                    <strong>$msg.get("groups_messages_create_messagecontent_instruction")</strong>
                    <br />
                    $bentrydoc.display("content", "edit", $bentryobj)
                </div>
                #textarea_wysiwyg($bentrydoc)
                #messageIncludeCreateJs()
                #messageAddSendToFormFields($spaceName, true, [], [])
                <div class="righttext">
                    #verbatim_start
                    <input class="button-orange floatright" type="submit" name="formactionsave" value="$msg.get("groups_messages_create_submit_btt")" onclick="document.forms.inline.action='$saveAction'; if(checkForm('inline') == false) return false; document.forms.inline.submit(); return false;"/>
                    <input class="button-grey floatright" type="submit" name="formactioncancel" value="$msg.get("groups_messages_create_cancel_btt")" onclick="history.go(-1); return false;"/>
                    #verbatim_end
                </div>
            </form>
        </div>
            #endgroupsection()
        #end
    #end
    #groupsfooter()
#end


#**
 * Service to show edit message form
 *
 *#
#macro(groups_editmessageform)
    #groupsinit()
    #set($pageName = $request.page)
    #set($spaceName = $request.space)
    #set($groupName = $spaceName)
    #if(!$groupName.startsWith("Group_"))
        #set($pos = 1 + $groupName.indexOf("_"))
        #set($groupName = $groupName.substring($pos))
    #end
    #set($divid = $request.divid)
    #set($adoc = $xwiki.getDocument("${spaceName}.${pageName}"))
    #set($ok = $adoc.use("XWiki.ArticleClass"))
    <form id="editform" action="$xwiki.getURL("Groups.SaveMessageService")" method="post" onsubmit="new iframe(this,{update:'${divid}', onComplete:onAfterSave}); return false;">
    <input type="hidden" name="xpage" value="plain" />
    <input type="hidden" name="space" value="$spaceName" />
    <input type="hidden" name="page" value="$pageName" />
    <br />
    <strong>$msg.get("groups_messages_create_messagetitle_instruction")</strong>
    $adoc.display("title", "edit")
    <br />
    <br />
    <strong>$msg.get("groups_messages_create_messagecontent_instruction")</strong>
    $adoc.display("content", "edit")
    <br />
    ## wysiwyg
    #verbatim_start
    <script type="text/javascript">
    #textarea_jsx_wysiwyg($adoc)
    </script>
    #verbatim_end
    ## The JavaScript needed is included in Groups.MessageSheet
    #set($viewRightObj = $adoc.getObject("XWiki.XWikiRights", "levels", "view"))
    #set($toGroup = true)
    #set($selectedRoles = [])
    #set($selectedMembers = [])
    #if($viewRightObj)
        $adoc.use($viewRightObj)
        #if(!$adoc.groups.contains("${groupName}.MemberGroup"))
            #set($toGroup = false)
        #end
        #foreach($role in $adoc.groups.split(","))
            #if($role.length()>0 && !$role.equals("XWiki.XWikiAllGroup") && !$role.equals("${groupName}.MemberGroup"))
                #set($ok = $selectedRoles.add($role))
            #end
        #end
        #foreach($member in $adoc.users.split(","))
            #if($member.length()>0)
                #set($ok = $selectedMembers.add($member))
            #end
        #end
    #end
    #messageAddSendToFormFields($groupName, $toGroup, $selectedRoles, $selectedMembers)
    <div class="button-right">
        <input type="button" class="button-grey" value="$msg.get("groups_messages_edit_cancel_btt")" onclick="cancelEditMessage('${spaceName}','${pageName}','${divid}');" />
        <input type="submit" class="button-orange" value="$msg.get("groups_messages_edit_submitsend_btt")" />
    </div>
    </p>
</form>
#end


#**
 * Delete Comment Service
 *#
#macro(groups_messages_deletecomment_service)
<!-- Message Start -->
## since this is called from the Groups.DeleteCommentServicePage we need to change the
## $doc so that it finds the right space name
    #set($doc = $xwiki.getDocument($request.docname))
    #groupsinit()
    #if("$!request.confirm" == "1") ## {
        #set($deletedoc = $xwiki.getDocument($request.docname))
        #if("$!request.date" != "") ## {
            #set($comments = $deletedoc.getComments())
            #foreach($comment in $comments) ## {
                #set($time = $deletedoc.getValue('date', $comment).time)
                #if(($request.date == "$time") && ( ($comment.author == $context.user) || $isGroupAdmin || $xwiki.hasAdminRights())) ## {
                    #set($junk = $deletedoc.removeObject($comment))
                    #set($junk = $deletedoc.saveWithProgrammingRights())
                DELETED
                #end ## }  ## if
            #end ## }  ## foreach
            #if($request.edit=="1")
                $response.sendRedirect($xwiki.getURL($deletedoc.fullName, "view", "edit=1"))
            #else
            #$xwiki.getURL($deletedoc.fullName)
                $response.sendRedirect($xwiki.getURL($deletedoc.fullName))
            #end
        #else
            #warning("Request invalid: comment date was not provided.")
        #end ## end if date
    #else
        #warning("Request invalid: call was not made from a javascript link.")
    #end ## end if confirm
#end ## end macro


#**
 * Groups View message service
 * This handles the call to view a message
 *#
#macro(groups_viewmessage_service)
    #set($adoc = $xwiki.getDocument("${request.space}.${request.page}"))
    #groupsdisplayarticleblock($adoc)
#end


#**
 * Save Message Service
 *#
#macro(groups_savemessage_service)
    #groupsinit()
    #set($msgSpaceName = $request.space)
    #set($spaceName = $msgSpaceName)
    #if(!$spaceName.startsWith("Group_"))
        #set($pos = 1 + $spaceName.indexOf("_"))
        #set($spaceName = $spaceName.substring($pos))
    #end
    #set($s = $sm.getSpace($spaceName))
    #set($pageName = $request.page)
    #set($adoc = $xwiki.getDocument("${msgSpaceName}.${pageName}"))
    #set($ok = $adoc.updateObjectFromRequest("XWiki.ArticleClass"))
## Update rights
    #messageUpdateRightsFromRequest($adoc)
## Send notification mail
    #messageSendNotificationMail($adoc)
<div class="groups-messages-saveinfo">
    $msg.get("groups_messages_savedone")
</div>
    $adoc.use("XWiki.ArticleClass")
    #groupsdisplayarticleblock($adoc)
#end
