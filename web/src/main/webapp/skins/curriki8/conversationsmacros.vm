## use curriki avatars
#macro(mediumUserAvatar2 $user)
  #curriki_avatar_width_height($xwiki.getDocument($user) "48" "")
#end
#macro(smallUserAvater2 $user)
  #curriki_avatar_width_height($xwiki.getDocument($user) "48" "")
#end
##
##---------------------------------------------------------------------
## Macros
##---------------------------------------------------------------------
##
## If we are viewing this page through the commentAdd or save actions then we should redirect to view
## This doesn't apply if it is being viewed through javascript.
#macro(redirectIfActionNotView)
  #if(!$requestedByAjax && $xcontext.getAction() != 'view' && $xcontext.getAction() != 'get')
    #if(!$captchaAnswerWrong)
      $response.sendRedirect("$doc.getURL('view')?viewer=conversations");
    #else
      #foreach($name in $request.getParameterNames())
        #set($queryString = "$!queryString&$name=$escapetool.url($request.get($name))")
      #end
      $response.sendRedirect($doc.getURL('view', "captchaAnswerWrong=1&$queryString"));
    #end
    $response.setContentLength(0)
    #stop
  #end
#end
##
##
##
#macro(addCommentToThreads $comment $commentThreads $rootKey)
  #set($thread = $commentThreads.get("$!{comment.replyto}"))
  #if("$!{thread}" == '')
    #set($thread = $commentThreads.get($rootKey))
  #end
  #set($discard = $thread.add($comment.number))
  #set($thread = '')
#end
##
##
##
#macro(displayThread $key $commentThreads, $commentDoc)
  ## If request parameter replyto is specified then we show the form under that comment.
  #if($replyTo == "$key" && $replyToConversation == $commentDoc.fullName)
    #displayCommentForm($commentDoc)
    #set($replied = true)
  #end
  ##
  #set($thread = $commentThreads.get("$!key"))
  #if($thread.size() > 0)
    <ul class="commentreplies">
    #foreach($commentID in $thread)
      <li class="reply">
      #displayComment($commentDoc.getObject($xCommentClass, $commentID))
      <div class="comments">
        #displayThread($commentID, $commentThreads)
      </div>
      </li>
    #end
    </ul>
  #end
#end
##
##
##
#macro(displayComment $comment, $commentDoc)
  ## compute the conversation id to make proper permalinks for comments
  #if ("$!conversationId" == "")
    #set($conversationId = $util.clearName("${commentDoc.name}$xwiki.formatDate($commentDoc.creationDate, 'dd/MM/yyyy HH:mm:ss')"))  
  #end
  #if(!$commentodd || $commentodd=="even")
   #set($commentodd = "odd")
  #else
   #set($commentodd = "even")
  #end 
  <div id="xwikicomment_${conversationId}_${comment.number}" class="comment $commentodd #if($comment.getProperty('author').value == $commentDoc.creator) commentByCreator#end">
    <span class="user-avatar">
     #if("$!comment.replyto" == '')#smallUserAvater2($comment.author)#{else}#smallUserAvater2($comment.author)#end
    </span> 
    <span class="answer-meta">
		<span class="user">$!xwiki.getUserName($doc.display('author', 'view', $comment))</span>
		#set($date = $comment.getProperty('date').value)
		<span class="time">$!xwiki.formatDate($date)</span>
	</span>
    <div class="comment-content">
      $commentDoc.getRenderedContent($comment.getProperty('comment').getValue(), $doc.getSyntax().toIdString())
	  <span class="actions">
	   ## compose the comment permalink in conversation carefully, taking care of making it point to the article's conversation view and not to the conversation itself
       #set($commentPermalinkInConversation = $doc.getURL('view', 'viewer=conversations'))
       #set($parentArticle = $doc.parent)
       #if (!$isTopic && $parentArticle != "")
        #set($commentPermalinkInConversation = $xwiki.getURL($doc.parent, 'view', 'viewer=conversations'))
       #end
        <span class="permalink"><a class="permalink" href="$escapetool.xml($commentPermalinkInConversation)#xwikicomment_${conversationId}_${comment.number}" title="$msg.get('core.viewers.comments.permalink')">$msg.get('core.viewers.comments.permalink')</a></span>
        #if($xwiki.hasAccessLevel('comment', $xcontext.user, $commentDoc.prefixedFullName))
        <span class="commenttool commentreply"><a class="commentreply" href="$escapetool.xml($xredirect.replaceAll('&?replyto=\d++', ''))&amp;replyto=${comment.number}&amp;replytoconversation=${escapetool.url($commentDoc.fullName)}#xwikicomment_${conversationId}_${comment.number}" title="$msg.get('core.viewers.comments.reply')"#if("$!replyTo" == "${comment.number}" && "$!replyToConversation" == "$!commentDoc.fullName") style="display: none;"#end>$msg.get('core.viewers.comments.reply')</a></span>
        #end
        #if ($context.user!="XWiki.XWikiGuest")
          <span class="flag">
           <a href="$xwiki.getURL("${doc.space}.NewFlag", "view", "target=${escapetool.url($doc.fullName)}:xwikicomment_${conversationId}_${comment.number}")">$msg.get("conversations.flag.button")</a>
          </span>
        #end
       </span>
	   <div class="coment-moderation">
        #if($xwiki.hasAccessLevel('comment', $xcontext.user, $commentDoc.prefixedFullName))
         #if($comment.author == $xcontext.user && $xwiki.hasAccessLevel('edit', $xcontext.user, $services.model.serialize($commentDoc.documentReference, 'compactwiki')))
          ## Although this will fail if the javascript is not working, we assume it's always working
          ## so edit comment will redirect to the conversations view of the article for which we edited comment, so that we have a correct reloading after save
          #set($commentEditRedirect = $commentDoc.getURL('get', 'xpage=xpart&vm=conversations.vm'))
          <span class="commenttool commentedit"><a class="edit" href="$commentDoc.getURL('view', "viewer=conversationscomments&amp;number=${comment.number}&amp;xredirect=$escapetool.url($commentEditRedirect)")" title="$msg.get('core.viewers.comments.edit')">$msg.get('core.viewers.comments.edit')</a></span>
         #end
        #end
        #if ($xwiki.hasAccessLevel('edit', $xcontext.user, $services.model.serialize($commentDoc.documentReference, 'compactwiki')))
          <span class="commenttool commentdelete"><a class="delete" href="$xwiki.getURL('ConversationCode.Actions', 'view', "action=deletecomment&amp;form_token=$!{services.csrf.getToken()}&amp;conversationdoc=${escapetool.url($services.model.serialize($commentDoc.documentReference, 'compactwiki'))}&amp;commentnumber=${comment.number}&amp;xredirect=$escapetool.url($xredirect)")" title="$msg.get('core.viewers.comments.delete')">$msg.get('core.viewers.comments.delete')</a></span>
        #end
	   </div>
    </div><!-- /.comment -->
#end
##
##
##
#macro(displayCommentForm $commentDoc)
 ## compute the conversation id to make proper permalinks for comments
 #if ("$!conversationId" == "")
    #set($conversationId = $util.clearName("${commentDoc.name}$xwiki.formatDate($commentDoc.creationDate, 'dd/MM/yyyy HH:mm:ss')"))  
 #end
 #if($xwiki.hasAccessLevel('edit', $xcontext.user, $commentDoc.prefixedFullName))
    ## prepare a nice redirect URL: for the reply form, redirect to the comemnt to which we replied, 
    ## for the new comment form, redirect to the conversation itself
    #if ("$!replyTo" != "")
      #set($redirectURL = "$doc.getURL('view', 'viewer=conversationstopic')#xwikicomment_${conversationId}_${replyTo}")
    #else
      #set($redirectURL = "$doc.getURL('view', 'viewer=conversationstopic')#${conversationId}")
    #end
   #if($xcontext.user != 'XWiki.XWikiGuest')
    <div class="comment user">
     <form id="${conversationId}_addcommentform" action="$escapetool.xml($commentDoc.getURL('commentadd', "xredirect=$escapetool.url($redirectURL)"))" method="post" class="AddComment">
      <div class="answer-layout">
       <span class="user-avatar">
       #mediumUserAvatar2($context.user)
       </span>
       <div class="comment-reply">
		<span class="comment-meta">
        #if($xcontext.user != 'XWiki.XWikiGuest')
          $msg.get('core.viewers.comments.add.guestName.prompt') $xwiki.getUserName($xcontext.user)
          <input type="hidden" name="${xCommentClass}_author" value="$xcontext.user"/>
        #else
          $msg.get('core.viewers.comments.add.guestName.prompt') <input type="text" id="${xCommentClass}_author" name="${xCommentClass}_author" value="$author"/>
          <a href='$escapetool.xml($xwiki.getURL('XWiki.XWikiLogin', 'login', "xredirect=$escapetool.url($xwiki.getRequestURL())"))'>$msg.get('login')</a>
        #end
        </span>
		<div class="comment-content">
		 ## CSRF prevention
         <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
         <input type="hidden" name="${xCommentClass}_date" value=""/>
         <input type="hidden" name="${xCommentClass}_replyto" value="$!replyTo"/>
         <div class="commentcontainer">
           <label for="${xCommentClass}_comment_${conversationId}">$msg.get('core.viewers.comments.add.comment.label')</label>
           <textarea id='${xCommentClass}_comment_${conversationId}' rows='5' cols="80" name='${xCommentClass}_comment' class="maximizable">$!comment</textarea>
           ## adding to wysiwyg editors
           #if($editors=="")
            #set($editors = "${xCommentClass}_comment_${conversationId}")
           #else
            #set($editors = "${editors},${xCommentClass}_comment_${conversationId}")
           #end
         </div>
         #if($xcontext.user == 'XWiki.XWikiGuest' && $offerGuestsCaptcha)
          #displayCaptcha()
         #end
         <div>
          <input class="button-orange" type="submit" value="$msg.get('core.viewers.comments.add.submit')"/>
          <a class="cancel secondary button-grey" href="$doc.getURL('view', 'viewer=conversationstopic')">$msg.get('core.viewers.comments.add.cancel')</a>
         </div>
        </div><!-- answer-content --> 
       </div><!-- answer-reply --> 
      </div><!-- answer-layout --> 
     </form>
    </div>  
   #end   
  #else
   <div class="answer user">
   #if($s)
    <p class="norights">$msg.get('conversation.groups.norights')</p>
   #else
    <p class="norights">$msg.get('conversation.norights')</p>   
   #end
   </div>
  #end
#end
##
##
##
#macro(displayCaptcha)
  <div id='commentCaptcha'>
  ## We only want to hide the captcha if we're sure the user has javascript, if this is an ajax call then it's a safe bet.
  #if($hideCaptcha)
    <script type='text/javascript'>
    $('commentCaptcha').style.display = "none";
    var handler = function() {
      var captchaDiv = $('commentCaptcha');
      var image = new Element('img', {'src' : '$commentDoc.getURL("imagecaptcha")?nounce=$datetool.getSystemTime()', 'alt' : '$escapetool.javascript($msg.get("core.captcha.image.alternateText"))'});
      captchaDiv.insertBefore(image, captchaDiv.firstChild);
      Event.observe(image, 'load', function() {
        Effect.SlideDown('commentCaptcha', { duration: 0.7 });
      });
      Event.stopObserving($('${xCommentClass}_comment'), 'focus', handler);
    }.bind(this);
    Event.observe($('${xCommentClass}_comment'), 'focus', handler);
    </script>
  #else
    <img src='$commentDoc.getURL("imagecaptcha")?nounce=$datetool.getSystemTime()' alt='$msg.get("core.captcha.image.alternateText")' />
  #end
  <input type='hidden' name='captcha_type' value='image'/>
  <br/>
  <label for='captcha_answer'>$msg.get('core.captcha.image.instruction')</label>
  <br/>
  <input id='captcha_answer' name='captcha_answer' type='text'>
  #if($captchaAnswerWrong)
    <span style="color:#C00; font-weight:bold; margin:0 0 0 5px;">$msg.get('core.captcha.captchaAnswerIsWrong')</span>
  #end
  <div class="wikimodel-emptyline"></div>
  </div>
#end
###
### Done copying
###
###
### Display the avatar of a user, or a standard image if the user has no avatar
###
### @param username The name of the user whose avatar will be displayed
###
#macro(resizedUserAvatar $username $size)
  #if(!$picturelist)
    #set($picturelist = $util.hashMap)
  #end
  #if(!$picturelist.containsKey("${username}--${size}"))
    #set($picture = "<img class='avatar avatar_${escapetool.xml(${size})}' src='")
    #if ($xwiki.getDocument($username).getObject('XWiki.XWikiGroups'))
      #set ($picture = $picture.concat($xwiki.getSkinFile('icons/xwiki/noavatargroup.png', true)))
    #else
      #set ($picture = $picture.concat($xwiki.getSkinFile('icons/xwiki/noavatar.png', true)))
    #end
    #set($profiledoc = $xwiki.getDocument($username))
    #if (!$profiledoc.isNew())
      #if($profiledoc.attachmentList.size() != 0)
        #set($profileobj = $profiledoc.getObject('XWiki.XWikiUsers', 0))
        #set($avatarFileName = $profileobj.getProperty('avatar').value)
        #if("$!avatarFileName" != "")
          #foreach ($attach in $profiledoc.attachmentList)
            #if($attach.filename == $avatarFileName)
              #set($pictureurl = $profiledoc.getAttachmentURL($avatarFileName))
              #set($picture = "<img src='")
              #set($picture = $picture.concat($pictureurl))
              #if ($size > 0)
                #set($picture = $picture.concat("?width=${escapetool.xml(${size})}&amp;height=${escapetool.xml(${size})}&amp;keepAspectRatio=true"))
              #end
              #set($picture = $picture.concat("' alt='"))
              #set($picture = $picture.concat(${xwiki.getUserName($username, false)}))
              #set($picture = $picture.concat("' title='"))
              #set($picture = $picture.concat(${xwiki.getUserName($username, false)}))
              #set($picture = $picture.concat("'/>"))
              #break
            #end
          #end
        #end
      #else
        #set($picture = $picture.concat("' width='${size}' alt='${xwiki.getUserName($username, false)}' title='${xwiki.getUserName($username, false)}'/>"))
      #end
    #end
    #set ($discard = $!picturelist.put("${username}--${size}", $picture))
  #end
  $picturelist.get("${username}--${size}")##
#end
###
#macro(displayTopicSortButton $field) 
  #set($sortclass = "forum-sort-button-inactive")
  #if($request.sortfield)
   #set($currentfield = $request.sortfield)
  #else
   #set($currentfield = "date")
  #end   
  #if($request.sortorder)
   #set($currentorder = $request.sortorder)
  #else
   #set($currentorder = "desc")
  #end  
  #set($nextorder = "desc")   
  #if($currentfield==$field)
   #if($currentorder=="desc")
    #set($style = "forum-sort-button-desc")
    #set($nextorder = "asc")   
   #else
    #set($style = "forum-sort-button-asc")
    #set($nextorder = "desc")    
   #end
  #end
  #if($doc.space.startsWith("Group_"))
   #set($viewer = "")
  #else
   #set($viewer = "viewer=conversationsforum&")
  #end
  <span class="${sortclass}"><a href="$doc.getURL("view", "${viewer}sortfield=${field}&sortorder=${nextorder}")" onclick="">$msg.get("conversations.forum.sorttopicsby.${field}")</a></span>   
#end
###
###
#macro(displayTopicAddForm $space)
    <div class="addconversation-container addtopic-container">
    <a href="$doc.getURL('view', 'viewer=conversations&amp;action=addconversation')" class="addconversation-activator">$msg.get('conversations.topic.add.activator')</a>
    <form class="#if("$!request.action" != "addtopic")hidden#end addconversation xform full" method="post" action="$xwiki.getURL('ConversationCode.Actions')">
      <div>
        <input type="hidden" name="action" value="addtopic" />
        <input type="hidden" name="space" value="$escapetool.xml($space)" />
        <input type="hidden" name="parent" value="$escapetool.xml($doc.fullName)" />
        <input type="hidden" name="form_token" value="$services.csrf.token" />
        <input type="hidden" name="xredirect" value="$escapetool.xml($doc.getURL('view', 'viewer=conversationsforum'))" />
      </div>
      <dl>
        <dt>$msg.get('ConversationCode.TopicClass_title')</dt>
        <dd><input type="text" name="title" /></dd>
        ## Create a fake topic object to be able to display the status and the type selectors
        #set($fakeTopic = $doc.newObject('ConversationCode.TopicClass'))
        ##<dt>$msg.get('ConversationCode.TopicClass_type')</dt>
        ##<dd>$doc.display('type', 'edit', $fakeTopic)</dd>       
        <dt>$msg.get('ConversationCode.TopicClass_description')</dt>
        <dd>$doc.display('description', 'edit', $fakeTopic)</dd>
        ## adding wysiwyg
        #if($editors=="")
            #set($editors = "ConversationCode.TopicClass_0_description")
        #else
            #set($editors = "${editors},ConversationCode.TopicClass_0_description")
        #end
      </dl>
      <div>
        ## Cannot choose status, will always create as in progress
        <input type="hidden" name="ConversationCode.TopicClass_${fakeTopic.number}_status" value="inprogress" />      
      </div>
      
      <div class="buttons">
        <input class="button-orange" type="submit" class="button" value="$msg.get('save')" />
        <a class="button-grey" href="$doc.getURL('view', 'viewer=conversationsforum')" class="cancel">$msg.get('cancel')</a>
      </div>
    </form>
  </div>
#end
##
##
#macro(displayConversationAddForm)
  <div class="addconversation-container addanswer-container">
    <a href="$doc.getURL('view', 'viewer=conversations&amp;action=addconversation')" class="addconversation-activator">$msg.get('conversation.add.activator')</a>
    <form class="#if("$!request.action" != "addconversation")hidden#end addconversation xform full" method="post" action="$xwiki.getURL('ConversationCode.Actions')">
      <div>
        <input type="hidden" name="action" value="addconversation" />
        <input type="hidden" name="page" value="$doc.name" />
        <input type="hidden" name="space" value="$doc.space" />
        <input type="hidden" name="form_token" value="$services.csrf.token" />
        <input type="hidden" name="xredirect" value="$escapetool.xml($doc.getURL('view', 'viewer=conversationstopic'))" />
      </div>
      <dl>
        ## Create a fake conversation object to be able to display the status and the type selectors
        #set($fakeConversation = $doc.newObject('ConversationCode.AnswerClass'))
        <dt>$msg.get('ConversationCode.AnswerClass_answer')</dt>
        <dd>$doc.display('answer', 'edit', $fakeConversation)</dd>  
        ## adding wysiwyg
        #if($editors=="")
            #set($editors = "ConversationCode.AnswerClass_0_answer")
        #else
            #set($editors = "${editors},ConversationCode_AnswerClass_answer")
        #end
        
      </dl>
      
      <div class="buttons">
        <input class="button-orange" type="submit" class="button" value="$msg.get('save')" />
        <a class="button-grey" href="$doc.getURL('view', 'viewer=conversationstopic')" class="cancel">$msg.get('cancel')</a>
      </div>
    </form>
  </div>
  <div class="clearfloats"></div>
#end
##
##
##
##
#macro(displayTopics)
  #set($step = 10)
  #set($nb = $step)
  #set($start = 0)
  #set($nextstart = $step)
  #if($request.start)
   #set($start = $util.parseInt($request.start))
   #set($nextstart = $start + $step)
  #end
  #if($request.sortfield=="votes")
   ## sort by votes - requires programming rights
   #set($topics = $xwiki.search("select doc.fullName from XWikiDocument as doc, BaseObject as obj, BaseObject as votesobj, IntegerProperty as nbvotes where doc.parent = ? and obj.name = doc.fullName and obj.className = 'ConversationCode.TopicClass'  and votesobj.name=doc.fullName and votesobj.className='XWiki.AverageRatingsClass' and votesobj.id=nbvotes.id.id and nbvotes.id.name='nbvotes'  order by nbvotes.value $!{currentorder}", $nb, $start, [ $doc.fullName ]))
  #elseif($request.sortfield=="comments")
   ## sort by comments - requires programming rights
   #set($topics = $xwiki.search("select doc.fullName from XWikiDocument as doc, BaseObject as obj, XWikiDocument as answerdoc, BaseObject as cobj where doc.parent = ? and obj.name = doc.fullName and obj.className = 'ConversationCode.TopicClass'  and answerdoc.parent=doc.fullName and answerdoc.fullName=cobj.name and cobj.className='XWiki.XWikiComments' group by 1 order by count(distinct cobj.number)+count(distinct answerdoc.fullName) $!{currentorder}", $nb, $start, [ $doc.fullName ]))
  #else
   ## sort by last update date
   #set($topics = $xwiki.searchDocuments(", BaseObject as obj where doc.parent = ? and obj.name = doc.fullName and obj.className = ? order by doc.date $!{currentorder}", $nb, $start, [$doc.fullName, 'ConversationCode.TopicClass']))
  #end
  #foreach($topic in $topics)
    #displayForumTopic($topic)
  #end
  <div id="forum-more">
  <a href="$doc.getURL("view", "viewer=conversationsforum&start=${nextstart}")">$msg.get("conversations.forum.more", [$step])</a>
  </div>
#end

##
#macro(displayForumAddThis $topicDoc, $topicTitle) 
#if(!$request.viewer)
{{html clean=false}}
#end
#set($addThisTitle = $msg.get("conversations.addthis.title", [$topicTitle, $topicDoc.getExternalURL()]))
#set($addThisDesc = $msg.get("conversations.addthis.desc", [$topicTitle, $topicDoc.getExternalURL()]))
<div class="topic-addthis">
<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style "
addthis:url="${escapetool.xml($topicDoc.getExternalURL())}"
addthis:title="${escapetool.xml($addThisTitle)}"
#if($addThisDesc!="" && $addThisDesc!="conversations.addthis.desc")
addthis:description="${escapetool.xml($addThisDesc)}"
#end
>
<a class="addthis_button_preferred_1"></a>
<a class="addthis_button_preferred_2"></a>
<a class="addthis_button_preferred_3"></a>
<a class="addthis_button_preferred_4"></a>
<a class="addthis_button_compact"></a>
<a class="addthis_counter addthis_bubble_style"></a>
</div>
<script type="text/javascript">var addthis_config =
{"data_track_addressbar":true};</script>
<script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-51acd2cb7dc9d536"></script>
<!-- AddThis Button END -->
</div>
#if(!$request.viewer)
{{/html}}
#end
#end
##
#macro(displayForumActions $topicDoc) 
<span class="topic-actions-flag conversation-flag">
 <a href="$xwiki.getURL("${doc.space}.NewFlag", "view", "target=${escapetool.url($topicDoc.fullName)}")">$msg.get("conversations.flag.button")</a>
</span>
<span class="topic-actions-permalink">
 <a href="$topicDoc.getURL()"></a>
</span>
#end
##


## TO DO : display all metadata, as specified in requirements
#macro(displayForumTopic $topic)
  #set($topicDoc = $xwiki.getDocument($topic))  
  #set($topicTitle = $topicDoc.displayTitle)
  #set($topicDescription = $topicDoc.display('description'))
  #set($topicComments = 0)
  #set($topicAnswers = $xwiki.searchDocuments(', BaseObject obj where doc.parent = ? and doc.fullName = obj.name and obj.className = ? and doc.fullName <> ? order by doc.date desc', 0, 0, [$topicDoc.fullName, 'ConversationCode.AnswerClass', 'ConversationCode.AnswerTemplate']))
  #if($topicAnswers)
  #foreach($topicAnswer in $topicAnswers)
    #set($answerDoc = $xwiki.getDocument($topicAnswer))
    #set($topicComments = $topicComments + $answerDoc.getComments().size())
  #end
  #set($nbCommentsAnswers = $topicAnswers.size() + $topicComments)
  #else
  #set($nbCommentsAnswers = 0)  
  #end
  <div class="topic">
    <span class="user-avatar">#smallUserAvater2($topicDoc.creator)</span>
    <h3 class="topic-title"><a href="$topicDoc.getURL()" title="$escapetool.xml($topicTitle)">$topicTitle</a></h3>
    <span class="topic-comments">$nbCommentsAnswers</span>
    <div class="topic-metadata">      
      <span class="topic-authortype">$!xwiki.getDocument($topicDoc.creator).display("neaoccupation")</span>
      <span class="topic-metas">
        <span class="topic-author">$!xwiki.getUserName($topicDoc.creator)</span>
        <span class="topic-date">$datetool.format('dd/MM/yyyy', $topicDoc.date)</span> ## Maybe it should be creation date ?
        <span class="topic-answers">$topicAnswers.size()</span>
        <div class="topic-vote conversation-like">
            #set($rating = $xwiki.ratings.getAverageRating($topicDoc).nbVotes)
            <input type="hidden" name="documenttolike" value="$topicDoc.fullName" />
            <span class="conversation-score" title="$msg.get('conversation.like.score.tooltip', [$rating])">$!rating</span>
        </div>
      </span>
    </div>
  <div class="topic-description">
    $!topicDescription
    <div class="topic-actions">
      <span class="left">
        #displayForumActions($topicDoc)
      </span>
      <span class="topic-vote2 conversation-like center"><input type="hidden" name="documenttolike" value="$topicDoc.fullName" /></span>
      <span class="right">
       #displayForumAddThis($topicDoc, $topicTitle)             
      </span>
    </div>
  </div>
  #if($topicDoc.hasAccessLevel("edit"))
  <div class="topic-moderation">
    <a class="topic-edit" href="$topicDoc.getURL("edit")" title="$msg.get("conversations.forum.edit")">$msg.get("conversations.forum.edit")</a>
    <a class="topic-delete" href="$topicDoc.getURL("delete")" title="$msg.get("conversations.forum.delete")">$msg.get("conversations.forum.delete")</a>
  </div>
  #end
</div>
#end
##
##
##
#macro(displayAnswers)
  ## The list of existing conversations with their comments
  ## Find all the documents which are the children of this document and have an object of type conversation inside
  #set($conversationsSql = ', BaseObject obj where doc.parent = ? and doc.fullName = obj.name and obj.className = ? and doc.fullName != ? order by doc.date desc')
  #set($conversationsSqlParams = [$doc.fullName, 'ConversationCode.AnswerClass', 'ConversationCode.AnswerTemplate'])
  #set($conversationDocs = $xwiki.searchDocuments($conversationsSql, $conversationsSqlParams))
  <div class="answers">
    #foreach($conversationDocName in $conversationDocs)
      #set($conversationDoc = $xwiki.getDocument($conversationDocName))
      #set($conversationObject = $conversationDoc.getObject('ConversationCode.AnswerClass'))
      #set($comments = $conversationDoc.getComments())
      ## Compose a conversation id for the conversation from the document name and the creation date, to make sure it gets unique 
      ## Otherwise two conversations that differ only by a space or so will get the same id 
      #set($conversationId = $util.clearName("${conversationDoc.name}$xwiki.formatDate($conversationDoc.creationDate, 'dd/MM/yyyy HH:mm:ss')"))
      <div class="answer" id="$conversationId">
        <div class="answer-layout">
          <span class="user-avatar">
          #smallUserAvater2($conversationDoc.creator)
          </span>
          <div class="answer-reply">
				<span class="answer-meta">
					<span class="user">$xwiki.getUserName($conversationDoc.creator)</span>
					<span class="time">$msg.get('conversation.updatedate', [$xwiki.formatDate($conversationDoc.date)])</span>
					<span class="votes conversation-ratings">
                     <span class="conversation-like">
                      <input type="hidden" name="documenttolike" value="$conversationDoc.fullName" />
                      <img src="$escapetool.xml($xwiki.getDocument('ConversationCode.Styles').getAttachmentURL('conversation-like.png'))" alt="$escapetool.xml($msg.get('conversation.like.button'))"
                      #if($xwiki.ratings.getRating($conversationDoc, $xcontext.user) == $util.null)class="canVote" title="$msg.get('conversation.like.button.tooltip')"#else title="$msg.get('conversation.like.button.alreadyliked.tooltip')"#end />
                     </span>
                     #set($rating = $xwiki.ratings.getAverageRating($conversationDoc).nbVotes)
                     <span class="conversation-score" title="$msg.get('conversation.like.score.tooltip', [$rating])">$rating</span>
                    </span>
					<span class="comments">$comments.size()</span>
				</span>
				<div class="answer-content">
 				    $conversationDoc.answer
					<span class="actions">
					 #if($context.user!="XWiki.XWikiUsers")
                     <span class="flag">
                      <a href="$xwiki.getURL("${doc.space}.NewFlag", "view", "target=${escapetool.url($doc.fullName)}:${conversationId}")">$msg.get("conversations.flag.button")</a>
                     </span>
                     #end
					 <span class="conversation-permalink">
                          <a class="permalink" href="$escapetool.xml($doc.getURL('view', 'viewer=conversations'))#${conversationId}" title="$msg.get('conversation.permalink.tooltip')">
                          ## We need to put image here since we cannot do background + indented text + fixed width as we do for comment tools, because overflow: hidden is messing up the display of the other icons.
                          </a>
                     </span>
					</span>
				</div>
		 </div><!-- / .answer-reply -->
         <div class="answer-moderation">
            #if($xwiki.hasAccessLevel('edit', $xcontext.user, $services.model.serialize($conversationDoc.documentReference, 'compactwiki')))
              <a class="edit" href="$conversationDoc.getURL('edit')" title="$msg.get('conversation.edit.title')">$msg.get('conversation.edit')</a>
            #end
            #if($xwiki.hasAccessLevel('delete', $xcontext.user, $services.model.serialize($conversationDoc.documentReference, 'compactwiki')))        
              <a class="delete" href="$xwiki.getURL('ConversationCode.Actions', 'view', "action=deleteconversation&amp;form_token=$!{services.csrf.getToken()}&amp;conversationdoc=${escapetool.url($services.model.serialize($conversationDoc.documentReference, 'compactwiki'))}&amp;xredirect=$escapetool.url($xredirect)")" title="$msg.get('conversation.delete.title')">$msg.get('conversation.delete')</a>
            #end
         </div><!-- / .answer-moderation -->
	    </div><!-- / .answer-layout -->
        <div class="comments">
          #if($comments.size() > 0)
            #set($rootKey = "-1")
            #set($commentThreads = $util.hashMap)
            #set($discard = $commentThreads.put($rootKey, $util.arrayList))
            #foreach($comment in $comments)
              #set($discard = $commentThreads.put("${comment.number}", $util.arrayList))
            #end
            #foreach($comment in $comments)
              #addCommentToThreads($comment, $commentThreads, $rootKey)
            #end
            ##
            ## Comments will be rendered in the context of the conversation document.
            #set($commentDoc = $conversationDoc)
            ##
            #displayThread($rootKey, $commentThreads, $commentDoc)
          #else
            <p class="noitems">$msg.get('conversation.empty')</p>
          #end
          #if(!$replied)
            #displayCommentForm($conversationDoc)
          #end
        </div><!-- / .comments -->
      </div><!-- / .answer -->
    #end
  </div><!-- / .answers -->
#end
##
##
#macro(displayEditors)
  #if($editors)
    #if($doc.syntax.toIdString() == "xwiki/1.0")
      <script type="text/javascript" src="$xwiki.getSkinFile("js/xwiki/wysiwyg/tinymce/tiny_mce/tiny_mce.js")"></script>
      <script type="text/javascript" src="$xwiki.getSkinFile("js/xwiki/wysiwyg/tinymce/wiki_editor/wiki_editor.js")"></script>
      <script type="text/javascript">
      //<![CDATA[
          wikiEditor.init({
              elements : "$!{escapetool.javascript($editors)}",
              language: "en",
              mode: "exact",
              content_css: "$xwiki.getSkinFile("style.css")",
              debug : false,
              remove_linebreaks : false,
              plugins: 'table, contextmenu, paste, searchreplace',
              wiki_use_style: '$xwiki.useWysiwygStyleToolbar()',
              wiki_images_path : '${doc.getURL('download')}/',
              wiki_attach_path : '${doc.URL}',
              wiki_macro_path : '${doc.URL}',
              wiki_plugins: 'core, attachments, macros'
          });
      //]]>
      </script>
    #elseif($services.wysiwyg.isSyntaxSupported($doc.syntax.toIdString()))
      #wysiwyg_editProperties($doc $editors false)
    #else
      #warning("The new GWT-based WYSIWYG editor doesn't support the syntax of the current document: <em>$doc.syntax.toIdString()</em>.")
    #end
  #end
#end
##
##
## Load the rich text object properties using a compact WYSIWYG editor.
#**
  * Creates a new WYSIWYG editor instance using the given configuration parameters.
  *
  * @param $parameters WYSIWYG editor configuration parameters
  *#
#macro(wysiwyg_createEditor $parameters)
  #set($jsVarName = "wysiwygConfig${util.generateRandomString(4)}")
  #wysiwyg_writeConfig($jsVarName $parameters)
  <script type="text/javascript">
    //<![CDATA[
      var WysiwygConfig = WysiwygConfig || {};
      Wysiwyg.onModuleLoad(function() {
        WysiwygConfig['${parameters.hookId}'] = $jsVarName; 
        $('${parameters.hookId}').wysiwyg = new WysiwygEditor($jsVarName);
        $jsVarName = undefined;
      });
    //]]>
  </script>
#end

#**
 * Summary of active discussions
 *#
#macro(displayTopicsSummary $forumDocName $topicsPage)
  ## add js for ajax reload of most viewed topic
  #set($nb = 10)
  #set($start = 0)
  #set($currentorder = "desc")
  #set($datesorder = "")
  #set($commentsorder = "")
  #set($votesorder = "")
  #set($nextdatesorder = "desc")
  #set($nextcommentsorder = "desc")
  #set($nextvotesorder = "desc")
  #if($request.sortfield=="votes")
   #if($request.sortorder=="asc")
    #set($currentorder = "asc")    
   #else
    #set($votesorder = "desc") 
    #set($nextvotesorder = "asc") 
   #end
   ## sort by votes - requires programming rights
   #set($topics = $xwiki.search("select doc.fullName from XWikiDocument as doc, BaseObject as obj, BaseObject as votesobj, IntegerProperty as nbvotes where doc.parent = ? and obj.name = doc.fullName and obj.className = 'ConversationCode.TopicClass'  and votesobj.name=doc.fullName and votesobj.className='XWiki.AverageRatingsClass' and votesobj.id=nbvotes.id.id and nbvotes.id.name='nbvotes' order by nbvotes.value $!{currentorder}", $nb, $start, [ $forumDocName ]))
  #elseif($request.sortfield=="comments")
    #if($request.sortorder=="asc")
    #set($currentorder = "asc")    
   #else
    #set($commentsorder = "desc") 
    #set($nextcommentsorder = "asc")
   #end
   ## sort by comments - requires programming rights
   #set($topics = $xwiki.search("select doc.fullName from XWikiDocument as doc, BaseObject as obj, XWikiDocument as answerdoc, BaseObject as cobj where doc.parent = ? and obj.name = doc.fullName and obj.className = 'ConversationCode.TopicClass'  and answerdoc.parent=doc.fullName and answerdoc.fullName=cobj.name and cobj.className='XWiki.XWikiComments' group by 1 order by count(distinct cobj.number)+count(distinct answerdoc.fullName) $!{currentorder}", $nb, $start, [ $forumDocName ]))
  #else
    #if($request.sortorder=="asc")
    #set($currentorder = "asc")    
   #else
    #set($datesorder = "desc")   
    #set($nextdatesorder = "asc")
   #end
   ## sort by last update date
   #set($topics = $xwiki.searchDocuments(", BaseObject as obj where doc.parent = ? and obj.name = doc.fullName and obj.className = ? order by doc.date $!{currentorder}", $nb, $start, [$forumDocName, 'ConversationCode.TopicClass']))
  #end
  #set($commentsurl = $xwiki.getDocument($topicsPage).getURL("get", "xpage=plain&sortfield=comments&sortorder=${nextcommentsorder}"))
  #set($votesurl = $xwiki.getDocument($topicsPage).getURL("get", "xpage=plain&sortfield=votes&sortorder=${nextvotesorder}"))
  #set($datesurl = $xwiki.getDocument($topicsPage).getURL("get", "xpage=plain&sortfield=dates&sortorder=${nextdatesorder}"))
  <!-- Discussions Sidebar Block -->
  #if(!$request.xpart)
  <div id="discussionTopics">
  #end
	<h3>$msg.get("discussion.panel.title")</h3>
	$msg.get("discussion.panel.sortby") <a class="date ${datesorder}" href="javascript:void(0)" onclick="new Ajax.Updater('discussionTopics','${datesurl}');">$msg.get("discussion.panel.dates")</a> 
	         <a class="votes ${votesorder}" href="javascript:void(0)" onclick="new Ajax.Updater('discussionTopics','${votesurl}');">$msg.get("discussion.panel.votes")</a>
	         <a class="comments ${commentsorder}" href="javascript:void(0)" onclick="new Ajax.Updater('discussionTopics','${commentsurl}');">$msg.get("discussion.panel.comments")</a>
	<div class="tableScroll">
		<table id="discussionTopicsTable" cellspacing="0" cellpadding="0" border="0">
			<caption>$msg.get("discussion.panel.title")</caption>
			<colgroup>
				<col class="date" />
				<col class="votes" />
				<col class="comments" />
			</colgroup>
			<tr>
				<th class="topics">$msg.get("discussion.panel.topics")</th>
				<th class="votes">$msg.get("discussion.panel.votes")</th>
				<th class="comments">$msg.get("discussion.panel.comments")</th>
			</tr>
  #foreach($topic in $topics)
    #set($topicDoc = $xwiki.getDocument($topic))  
    #set($topicTitle = $topicDoc.displayTitle)
    #set($rating = $xwiki.ratings.getAverageRating($topicDoc).nbVotes)
    #set($topicComments = 0)
    #set($topicAnswers = $xwiki.searchDocuments(', BaseObject obj where doc.parent = ? and doc.fullName = obj.name and obj.className = ? and doc.fullName <> ? order by doc.date desc', 0, 0, [$topicDoc.fullName, 'ConversationCode.AnswerClass', 'ConversationCode.AnswerTemplate']))
    #if($topicAnswers)
     #foreach($topicAnswer in $topicAnswers)
      #set($answerDoc = $xwiki.getDocument($topicAnswer))
      #set($topicComments = $topicComments + $answerDoc.getComments().size())
     #end
     #set($nbCommentsAnswers = $topicAnswers.size() + $topicComments)
    #else
     #set($nbCommentsAnswers = 0)  
    #end
    #if(!$topicodd || $topicodd=="even")
     #set($topicodd = "odd")
    #else
     #set($topicodd = "even")
    #end
  		    <tr class="${topicodd}">
				<td class="topic"><a href="$topicDoc.getURL()">$topicTitle</a></td>
				<td class="votes">${rating}</td>
				<td class="comments">${nbCommentsAnswers}</td>
			</tr>
  #end
  		</table>
	</div>
  #if(!$request.xpart)
   </div>
  #end 
#end

